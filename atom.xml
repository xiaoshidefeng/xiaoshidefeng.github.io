<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xiaoshidefeng的博客</title>
  <subtitle>一个计算机本科生</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.chenwe.top/"/>
  <updated>2017-10-21T11:47:55.521Z</updated>
  <id>http://blog.chenwe.top/</id>
  
  <author>
    <name>ChenWei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot整合Oracle与Mybatis</title>
    <link href="http://blog.chenwe.top/2017/10/21/2017/2017-10-21%20SpringBoot%E6%95%B4%E5%90%88Oracle%E4%B8%8EMybatis/"/>
    <id>http://blog.chenwe.top/2017/10/21/2017/2017-10-21 SpringBoot整合Oracle与Mybatis/</id>
    <published>2017-10-21T11:01:53.362Z</published>
    <updated>2017-10-21T11:47:55.521Z</updated>
    
    <content type="html"><![CDATA[<p>之前用的都是Mysql来做数据库 spring data jpa来实现持久层<br>这次来试试Oracle 和 Mybatis<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171021190838349.png" alt=""><br><a id="more"></a></p>
<h2 id="Oracle的驱动的安装"><a href="#Oracle的驱动的安装" class="headerlink" title="Oracle的驱动的安装"></a>Oracle的驱动的安装</h2><p>创建玩SpringBoot项目后<br>我们要把驱动也安装下<br>推荐用官方自带的驱动<br>位置在安装的目录下 <code>product\12.1.0\dbhome_1\jdbc\lib</code>里<br>里面的 <code>ojdbc6.jar</code>是JDK6的驱动<br>因为我现在的项目是JDK8的，所以我们要用<code>ojdbc7.jar</code>这个文件<br>打开IDEA -&gt; File -&gt; project Structure -&gt; Libraries 新建一个JAVA的依赖<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-2017102119152955.png" alt=""><br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171021191606391.png" alt=""><br>选中我们刚刚找到的<code>ojdbc7.jar</code> 文件</p>
<p>在pom.xml中写入<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.oracle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ojdbc7<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="Oracle配置"><a href="#Oracle配置" class="headerlink" title="Oracle配置"></a>Oracle配置</h2><p>在application.properties 中写入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">spring.jpa.database=oracle</div><div class="line">spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver</div><div class="line">spring.datasource.url=jdbc:oracle:thin:@localhost:1521:orcl</div><div class="line">spring.datasource.username=c##ccww</div><div class="line">spring.datasource.password=ccww</div><div class="line">spring.jpa.hibernate.ddl-auto=update</div></pre></td></tr></table></figure></p>
<p>开启Oracle服务后<br>运行一下SpringBoot 项目，如果没有报错，说明我们Oracle成功配置</p>
<h2 id="整合Mybatis"><a href="#整合Mybatis" class="headerlink" title="整合Mybatis"></a>整合Mybatis</h2><p>在pom.xml文件中写入<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>我们还写了一个测试相关的东西，为了方便等下的测试<br>在application.properties 中写入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mybatis.typeAliasesPackage=com.example.oracletest.domain</div></pre></td></tr></table></figure></p>
<p>指明实体类的所在文件夹</p>
<p>下面我们编写一个实体类Users.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Users</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Integer id;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String name;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>创建一个 mapper文件夹，用来存放Mybatis 的mapper文件<br>在这个文件夹下新建一个 UsersMapper.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Repository</span></div><div class="line"><span class="meta">@Mapper</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UsersMapper</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Insert</span>(<span class="string">"INSERT INTO Users(id, name) VALUES(#&#123;id&#125;, #&#123;name&#125;)"</span>)</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">addUser</span><span class="params">(@Param(<span class="string">"id"</span>)</span> Integer id, @<span class="title">Param</span><span class="params">(<span class="string">"name"</span>)</span> String name)</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Delete</span>(<span class="string">"delete from Users where id=#&#123;id&#125;"</span>)</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteByUserId</span><span class="params">(@Param(<span class="string">"id"</span>)</span> Integer id)</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Update</span>(<span class="string">"update Users set name=#&#123;name&#125; where id=#&#123;id&#125;"</span>)</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateUser</span><span class="params">(@Param(<span class="string">"id"</span>)</span> Integer id, @<span class="title">Param</span><span class="params">(<span class="string">"name"</span>)</span> String name)</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM Users"</span>)</div><div class="line">    <span class="meta">@Results</span>(&#123;</div><div class="line">            <span class="meta">@Result</span>(property = <span class="string">"id"</span>,  column = <span class="string">"id"</span>),</div><div class="line">            <span class="meta">@Result</span>(property = <span class="string">"name"</span>, column = <span class="string">"name"</span>)</div><div class="line">    &#125;)</div><div class="line">    <span class="function">List&lt;Users&gt; <span class="title">findAll</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>我们事先在数据库中新建一个Users的表，有id和name字段<br>并且先放入少量测试数据</p>
<p>我们还要再启动类中添加注解 <code>@MapperScan(&quot;com.example.oracletest.Mapper&quot;)</code><br>来指明mapper的所在文件夹<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.example.oracletest.Mapper"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OracleTestApplication</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		SpringApplication.run(OracleTestApplication.class, args);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这样我们的Mybatis就整合好了<br>下面我们来测试下</p>
<p>我们在测试的文件夹下新建一个测试<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</div><div class="line"><span class="meta">@SpringBootTest</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OracleTestApplicationTests</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="meta">@Autowired</span></div><div class="line">	<span class="keyword">private</span> UsersMapper usersMapper;</div><div class="line">	<span class="meta">@Test</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MybatisTest</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">		<span class="comment">//查询用户表所有数据</span></div><div class="line">		printUserList();</div><div class="line"></div><div class="line">		<span class="comment">//插入新数据</span></div><div class="line">		usersMapper.addUser(<span class="number">3</span>,<span class="string">"Jack"</span>);</div><div class="line">		printUserList();</div><div class="line"></div><div class="line">		<span class="comment">//删除数据</span></div><div class="line">		usersMapper.deleteByUserId(<span class="number">2</span>);</div><div class="line">		printUserList();</div><div class="line"></div><div class="line">		<span class="comment">//修改数据</span></div><div class="line">		usersMapper.updateUser(<span class="number">1</span>, <span class="string">"Chen"</span>);</div><div class="line">		printUserList();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printUserList</span><span class="params">()</span> </span>&#123;</div><div class="line">		List&lt;Users&gt; usersList = usersMapper.findAll();</div><div class="line">		<span class="keyword">for</span> (Users user:</div><div class="line">				usersList) &#123;</div><div class="line">			System.out.println(<span class="string">"User ID = "</span> + user.getId());</div><div class="line">			System.out.println(<span class="string">"User name = "</span> + user.getName());</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		System.out.println(<span class="string">"--------------------------"</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>我们来测试一下是否能够成功对数据库进行增删改查<br>右键 Run MybatisTest()<br>我这里成功获取了数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">User ID = 2</div><div class="line">User name = Marry</div><div class="line">User ID = 1</div><div class="line">User name = Tom</div><div class="line">--------------------------</div><div class="line">User ID = 2</div><div class="line">User name = Marry</div><div class="line">User ID = 3</div><div class="line">User name = Jack</div><div class="line">User ID = 1</div><div class="line">User name = Tom</div><div class="line">--------------------------</div><div class="line">User ID = 3</div><div class="line">User name = Jack</div><div class="line">User ID = 1</div><div class="line">User name = Tom</div><div class="line">--------------------------</div><div class="line">User ID = 3</div><div class="line">User name = Jack</div><div class="line">User ID = 1</div><div class="line">User name = Chen</div><div class="line">--------------------------</div></pre></td></tr></table></figure></p>
<p>增删改查都成功实现了<br>说明我们成功整合了Mybatis 并使用</p>
<p><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171021194754903.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前用的都是Mysql来做数据库 spring data jpa来实现持久层&lt;br&gt;这次来试试Oracle 和 Mybatis&lt;br&gt;&lt;img src=&quot;http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171021190838349.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://blog.chenwe.top/categories/SpringBoot/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Oracle的安装与新用户的创建</title>
    <link href="http://blog.chenwe.top/2017/10/21/2017/2017-10-21%20Oracle%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E6%96%B0%E7%94%A8%E6%88%B7%E7%9A%84%E5%88%9B%E5%BB%BA/"/>
    <id>http://blog.chenwe.top/2017/10/21/2017/2017-10-21 Oracle的安装与新用户的创建/</id>
    <published>2017-10-21T08:42:15.276Z</published>
    <updated>2017-10-21T11:45:17.437Z</updated>
    
    <content type="html"><![CDATA[<p>之前用的都是Mysql来做数据库<br>这次来试试Oracle<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-2017102118360441.png" alt=""><br><a id="more"></a></p>
<h2 id="Oracle的安装"><a href="#Oracle的安装" class="headerlink" title="Oracle的安装"></a>Oracle的安装</h2><p>我这里使用的是Oracle 12c版本<br>在<a href="https://www.oracle.com/cn/database/index.html" target="_blank" rel="external">官方下载地址</a><br>里将两个压缩文件都下载过来<br>将这两个文件都解压出来<br>将<code>winx64_12102_database_2of2</code>里的stage 文件<br>与<code>winx64_12102_database_1of2</code>里的stage文件合并<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171021184009746.png" alt=""></p>
<p>然后点击setup 安装Oracle<br>具体的安装方法可以参考<a href="http://www.cnblogs.com/soraka/p/5855724.html" target="_blank" rel="external">这篇博客</a><br>安装过程十分的慢，请耐心等待</p>
<h2 id="启动Oracle服务"><a href="#启动Oracle服务" class="headerlink" title="启动Oracle服务"></a>启动Oracle服务</h2><p>我们首先要启动Oracle的服务<br>右键我的电脑 -&gt; 管理 -&gt; 服务和应用程序 -&gt; 服务<br>里面找到 <code>OracleServiceORCL</code> 和 <code>OracleOraDB12Home1TNSListener</code><br>选中后右键点击启动 来启动服务</p>
<h2 id="Oracle创建新用户与权限设置"><a href="#Oracle创建新用户与权限设置" class="headerlink" title="Oracle创建新用户与权限设置"></a>Oracle创建新用户与权限设置</h2><p>打开cmd<br>输入 <code>sqlplus</code><br>输入用户名和密码（安装的时候已经设置了）<br>出现如下界面代表成功了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">λ sqlplus</div><div class="line"></div><div class="line">SQL*Plus: Release 12.1.0.2.0 Production on 星期六 10月 21 15:42:13 2017</div><div class="line"></div><div class="line">Copyright (c) 1982, 2014, Oracle.  All rights reserved.</div><div class="line"></div><div class="line">请输入用户名:  system</div><div class="line">输入口令:</div><div class="line">上次成功登录时间: 星期六 10月 21 2017 15:41:23 +08:00</div><div class="line"></div><div class="line">连接到:</div><div class="line">Oracle Database 12c Enterprise Edition Release 12.1.0.2.0 - 64bit Production</div><div class="line">With the Partitioning, OLAP, Advanced Analytics and Real Application Testing options</div><div class="line"></div><div class="line">SQL&gt;</div></pre></td></tr></table></figure></p>
<p>下面我们创建一个表空间给新的用户<br>输入<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SQL&gt; create tablespace stusys</div><div class="line">  2  datafile 'f:\app\stuysy.dbf'</div><div class="line">  3  size 10M;</div><div class="line"></div><div class="line">  表空间已创建。</div></pre></td></tr></table></figure></p>
<p>这里我们创建了一个 名为  <code>stusys</code>的表空间，位于f盘的app目录下，大小10M</p>
<p>下面我们创建一个新用户<br>输入<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">SQL&gt; create user c##ccww</div><div class="line">  2  identified by ccww</div><div class="line">  3  default tablespace stusys</div><div class="line">  4  temporary tablespace temp;</div><div class="line"></div><div class="line">  用户已创建。</div></pre></td></tr></table></figure></p>
<p>这里我们创建了一个名为c##ccww的用户<br><strong>在Oracle 12c版本里，创建新用户必须以c##开头</strong></p>
<p>下面我们给他添加权限<br>输入<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">SQL&gt; grant connect to c##ccww</div><div class="line"></div><div class="line">授权成功。</div><div class="line"></div><div class="line">SQL&gt; grant resource to c##ccww;</div><div class="line"></div><div class="line">授权成功。</div><div class="line"></div><div class="line">SQL&gt; alter user c##ccww default tablespace stusys;</div><div class="line"></div><div class="line">用户已更改。</div><div class="line"></div><div class="line">SQL&gt; grant unlimited tablespace to c##ccww;</div><div class="line"></div><div class="line">授权成功。</div></pre></td></tr></table></figure></p>
<p>我们还为他设置了用户空间</p>
<p>这样我们新用户就创建好了</p>
<h2 id="登录Sql-Developer"><a href="#登录Sql-Developer" class="headerlink" title="登录Sql Developer"></a>登录Sql Developer</h2><p>打开我们在安装Oracle的时候安装的 <code>Sql Developer</code>工具<br>这个是Oracle图形管理界面</p>
<p>输入刚刚的用户名密码<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171021185629533.png" alt=""><br>点击连接</p>
<p>这样我们成功登录了<br>下面我们可以选择表 来创建一个表了<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171021185720264.png" alt=""></p>
<p>这样，我们就完成了Oracle的安装与用户配置<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171021185750824.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前用的都是Mysql来做数据库&lt;br&gt;这次来试试Oracle&lt;br&gt;&lt;img src=&quot;http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-2017102118360441.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Oracle" scheme="http://blog.chenwe.top/categories/Oracle/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>理解Java的继承与多态</title>
    <link href="http://blog.chenwe.top/2017/10/15/2017/2017-10-15%20%E7%90%86%E8%A7%A3JAVA%E7%9A%84%E7%BB%A7%E6%89%BF%E4%B8%8E%E5%A4%9A%E6%80%81/"/>
    <id>http://blog.chenwe.top/2017/10/15/2017/2017-10-15 理解JAVA的继承与多态/</id>
    <published>2017-10-15T12:48:34.382Z</published>
    <updated>2017-10-16T08:20:54.784Z</updated>
    
    <content type="html"><![CDATA[<p>很多人其实只是粗略的过了一遍Java的知识点<br>基础并不扎实<br>虽然一开始的时候不会发现有什么弊端<br>但是随着工作的深入，对于基础的要求更加重要了</p>
<p>这里我来稍微总结下Java的继承与多态中需要注意的地方<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171015214220622.png" alt=""><br><a id="more"></a></p>
<h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>继承可以提高代码复用<br>继承有下面几个特点</p>
<ul>
<li><p>1、子类拥有父类非 private 的属性和方法。</p>
</li>
<li><p>2、子类可以拥有自己属性和方法，即子类可以对父类进行扩展。</p>
</li>
<li><p>3、子类可以用自己的方式实现父类的方法。</p>
</li>
</ul>
<p>下面来介绍下向上转型<br>假如我们有两个类 <code>Wine.java</code> 和 <code>WhiteWine.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Wine</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">one</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"Wine one"</span>);</div><div class="line">        two();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">two</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"Wine two"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WhiteWine</span> <span class="keyword">extends</span> <span class="title">Wine</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">one</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"WhiteWine one"</span>);</div><div class="line">        two();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">two</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"WhiteWine two"</span>);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>WhiteWine 继承自 Wine<br>重载了one方法<br>重写了two方法</p>
<p>我们编写一个测试类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        Wine wine = <span class="keyword">new</span> WhiteWine();</div><div class="line">        wine.one();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>我们将<code>WhiteWine</code>这个子类向上转型为<code>Wine</code>这个父类<br>但是子类中被重载的方法会丢失<br>我们运行上面的测试类，可以得到如下结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Wine one</div><div class="line">WhiteWine two</div></pre></td></tr></table></figure></p>
<p>在运行的时候，因为向上转型的关系，丢失了子类的<code>one(int i)</code>方法<br>所以调用了父类的<code>one()</code>方法<br>在 <code>one()</code>  方法中又要调用<code>two()</code>方法<br>因为子类重写亏了 <code>two()</code> 方法，所以再调用子类的 <code>two()</code>方法</p>
<p>所以继承的时候用向上转型，会丢失部分方法与属性</p>
<h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><p>假如我们有三个类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">show</span><span class="params">(C obj)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> (<span class="string">"A and C"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">show</span><span class="params">(A obj)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> (<span class="string">"A and A"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">show</span><span class="params">(B obj)</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> (<span class="string">"B and B"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">show</span><span class="params">(A obj)</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> (<span class="string">"B and A"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">extends</span> <span class="title">B</span> </span>&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>B 继承 A， C 继承 B<br>我们编写一个测试类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ABCDtest</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        A a = <span class="keyword">new</span> B();</div><div class="line">        B b = <span class="keyword">new</span> B();</div><div class="line">        C c = <span class="keyword">new</span> C();</div><div class="line">        System.out.println(a.show(b));</div><div class="line">        System.out.println(a.show(c));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>我们运行测试类<br>得到以下结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">B and A</div><div class="line">A and C</div></pre></td></tr></table></figure></p>
<p>我们分析一下<br>因为在继承链中对象方法的调用存在一个优先级：this.show(O)、super.show(O)、this.show((super)O)、super.show((super)O)</p>
<p>所以在运行的时候<br>我们调用了一个由B向上转型的A类的方法show(O)<br>并且传入一个b的对象<br>因为优先级的关系<br>所以他会先去找 this.show(O) 里面有没有这个方法<br>这里的 this 就是 A<br>在A对象中并没有以 B为传入参数的show方法</p>
<p>所以我们去找下一个 super.show(O)方法<br>因为A没有父类<br>所以也没有</p>
<p>然后我们去找下一个 this.show((super)O)<br>这里 我们发现 B的父类是A<br>所以 这里相当于 A.show(A) 在A类中有<br>又因为B重写了A里的 show(A)方法<br>所以系统会调用 B类里的 show(A) 方法</p>
<p>于是就打出了 <code>B and A</code>这行</p>
<p>然后执行a.show(c)<br>因为 A类里有 show(C) 方法 且子类没有重写<br>所以直接执行并打印 <code>A and C</code></p>
<p><strong>这里是不是有点绕</strong><br>但其实自己去动手写下就很好理解了<br>一开始我也模模糊糊的<br>但是自己写了下，就很好理解了，主要是要自己亲自动手去做<br>慢慢来吧<br>部分代码参考自 <a href="http://wiki.jikexueyuan.com/project/java-enhancement/java-three.html" target="_blank" rel="external">此教程</a><br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171015213944524.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很多人其实只是粗略的过了一遍Java的知识点&lt;br&gt;基础并不扎实&lt;br&gt;虽然一开始的时候不会发现有什么弊端&lt;br&gt;但是随着工作的深入，对于基础的要求更加重要了&lt;/p&gt;
&lt;p&gt;这里我来稍微总结下Java的继承与多态中需要注意的地方&lt;br&gt;&lt;img src=&quot;http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171015214220622.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Java" scheme="http://blog.chenwe.top/categories/Java/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>图书信息推送系统（三）</title>
    <link href="http://blog.chenwe.top/2017/10/04/2017/2017-10-04%20%E5%9B%BE%E4%B9%A6%E4%BF%A1%E6%81%AF%E6%8E%A8%E9%80%81%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://blog.chenwe.top/2017/10/04/2017/2017-10-04 图书信息推送系统（三）/</id>
    <published>2017-10-04T11:54:40.530Z</published>
    <updated>2017-10-04T12:15:32.122Z</updated>
    
    <content type="html"><![CDATA[<p>上回书说到<br>具体功能的实现</p>
<p>这次我们来讲下服务器的部署<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171004195538281.png" alt=""></p>
<a id="more"></a>
<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>在第一篇里我们搭建了数据库的环境<br>现在我们要一个JAVA的运行环境<br>因为我的项目是用JAVA1.8做的<br>所以我们要安装JAVA1.8</p>
<p>这里我用apt-get 来安装<br>先用 <code>apt-cache search package</code>这条命令来搜索相关的软件包<br>获取到的结果如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">cw@tang-pc:~$ apt-cache search java8</div><div class="line">default-jdk - Standard Java or Java compatible Development Kit</div><div class="line">default-jdk-headless - Standard Java or Java compatible Development Kit (headless)</div><div class="line">default-jre - Standard Java or Java compatible Runtime</div><div class="line">default-jre-headless - Standard Java or Java compatible Runtime (headless)</div><div class="line">openjdk-8-jdk - OpenJDK Development Kit (JDK)</div><div class="line">openjdk-8-jdk-headless - OpenJDK Development Kit (JDK) (headless)</div><div class="line">openjdk-8-jre - OpenJDK Java runtime, using Hotspot JIT</div><div class="line">openjdk-8-jre-headless - OpenJDK Java runtime, using Hotspot JIT (headless)</div><div class="line">openjdk-9-jdk - OpenJDK Development Kit (JDK)</div><div class="line">openjdk-9-jdk-headless - OpenJDK Development Kit (JDK) (headless)</div><div class="line">openjdk-9-jre - OpenJDK Java runtime, using Hotspot JIT</div><div class="line">openjdk-9-jre-headless - OpenJDK Java runtime, using Hotspot JIT (headless)</div><div class="line">oracle-java8 - Oracle Java(TM) Development Kit (JDK) 8</div></pre></td></tr></table></figure></p>
<p>我这里选择最后一个 <code>oracle-java8</code>来安装</p>
<p>输入 <code>sudo apt-get install oracle-java8</code><br>来在Linux下安装java8</p>
<p>输入 <code>java -version</code> 来查看版本</p>
<h2 id="更换JDK版本"><a href="#更换JDK版本" class="headerlink" title="更换JDK版本"></a>更换JDK版本</h2><p>可能因为原来就有一些老版本的jdk关系<br>所以安装的JAVA8可能不生效<br>如果这里版本不是我们想要的版本<br>我们可以输入 <code>update-alternatives --config java</code><br>来按照提示更改JAVA版本</p>
<p>安装完成后<br>我们在外面的IDEA中我们用maven打包项目<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171004201007493.png" alt=""></p>
<p>打包完成后，我们移动到Linux里面的目录下</p>
<p>输入<code>java -jar 你的项目.jar mylog.txt &amp;</code><br>这样就能在后台运行了</p>
<p>我们查看我们的日志内容是否正常<br>如果一切正常，那么我们就成功部署了</p>
<p><strong>至此，我们的图书信息推送系统就完成了，可以去对应的地址去测试<br>但是要注意一点，因为我用的是学校里的电脑改的服务器，用的是校园网，所以只能由校园网来访问，外部的网络无法访问我们的系统页面。<br>当初选择学校的自制服务器，也是因为学校图书系统只能由校园网访问，所以只能通过我们在校园网上构建的爬虫来获取数据。</strong><br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171004201503644.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上回书说到&lt;br&gt;具体功能的实现&lt;/p&gt;
&lt;p&gt;这次我们来讲下服务器的部署&lt;br&gt;&lt;img src=&quot;http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171004195538281.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://blog.chenwe.top/categories/SpringBoot/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>图书信息推送系统（二）</title>
    <link href="http://blog.chenwe.top/2017/10/03/2017/2017-10-03%20%E5%9B%BE%E4%B9%A6%E4%BF%A1%E6%81%AF%E6%8E%A8%E9%80%81%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://blog.chenwe.top/2017/10/03/2017/2017-10-03 图书信息推送系统（二）/</id>
    <published>2017-10-03T12:16:23.865Z</published>
    <updated>2017-10-03T12:51:42.236Z</updated>
    
    <content type="html"><![CDATA[<p>上回书说到<br>Linux数据库的配置以及远程连接</p>
<p>这次我们来讲下具体功能的实现<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171003202042469.png" alt=""></p>
<a id="more"></a>
<h2 id="功能模块"><a href="#功能模块" class="headerlink" title="功能模块"></a>功能模块</h2><p>我将这个系统分为以下几个模块来实现</p>
<ul>
<li>爬虫模块<br>负责获取图书数据</li>
<li>网站模块<br>负责网站前后端</li>
<li>邮件服务模块<br>负责邮件发送的任务</li>
<li>定时模块<br>负责定时执行任务</li>
</ul>
<h2 id="爬虫模块"><a href="#爬虫模块" class="headerlink" title="爬虫模块"></a>爬虫模块</h2><p>我们用JAVA做一个爬虫<br>去获取网页的数据<br>这里我用了<code>Jsoup</code>这个库</p>
<h2 id="Jsoup安装与使用"><a href="#Jsoup安装与使用" class="headerlink" title="Jsoup安装与使用"></a>Jsoup安装与使用</h2><p>我用maven安装 在pom.xml里写入<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jsoup<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsoup<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>我们定一个方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUrl</span><span class="params">(String url, String email)</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="comment">//Jsoup来提取图书馆藏信息</span></div><div class="line">        Document doc = Jsoup.connect(url)</div><div class="line">                <span class="comment">//.data("query", "Java")</span></div><div class="line">                .userAgent(<span class="string">"'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '                            'Chrome/51.0.2704.63 Safari/537.36'"</span>)</div><div class="line">                <span class="comment">//.cookie("auth", "token")</span></div><div class="line">                .timeout(<span class="number">10000</span>)</div><div class="line">                <span class="comment">//.post()</span></div><div class="line">                .get();</div><div class="line"></div><div class="line">        Elements elements = doc.select(<span class="string">".whitetext td"</span>);</div><div class="line">        <span class="keyword">for</span> (Element ele : elements) &#123;</div><div class="line">            String text = ele.text();</div><div class="line">            System.out.println(text);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>我们先通过<code>Jsoup.connect(url)</code>方法 获取一个Document对象<br>我们调用<code>doc.select()</code>方法来定位我们要的元素（详细使用方法参考<a href="https://jsoup.org/apidocs/" target="_blank" rel="external">Jsoup Selector文档</a>）<br>在获取完之后 这里我将获取的数据 打印出来了<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171001164957520.png" alt=""></p>
<h2 id="网站模块"><a href="#网站模块" class="headerlink" title="网站模块"></a>网站模块</h2><p>这里 我用<code>thymeleaf</code>来作为模板<br>thymeleaf的具体用法不多介绍<br>有兴趣可以去看下<a href="http://www.thymeleaf.org/documentation.html" target="_blank" rel="external">Thymeleaf官方文档</a></p>
<p>这里简单讲下一个表单功能的实现<br>先放代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">th:action</span>=<span class="string">"@&#123;/edit&#125;"</span> <span class="attr">th:object</span>=<span class="string">"$&#123;sub&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"url"</span>&gt;</span>图书链接（带http://）:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>  <span class="attr">id</span>=<span class="string">"url"</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">th:value</span>=<span class="string">"*&#123;url&#125;"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>邮箱:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">th:value</span>=<span class="string">"*&#123;email&#125;"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span>  <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>这里我提交到 是一个 对象<br>我把它命名为sub</p>
<p>对应的在<code>controller</code>里我也接收这个<code>sub</code>对象<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/edit"</span>, method= RequestMethod.POST)</div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">edit</span><span class="params">(@ModelAttribute(<span class="string">"sub"</span>)</span>Subscription subscription, RedirectAttributes model) </span>&#123;</div><div class="line">    System.out.println(subscription.getUrl());</div><div class="line">    <span class="keyword">if</span> (addBookService.addBook(subscription)) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"redirect:/add_success"</span>;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"redirect:/add_error"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>在controller里，我们对拿来的<code>sub</code>对象 强制转换成 <code>Subscription</code>对象<br>这个对象就是我们的实体类了</p>
<p>然后将 <code>Subscription</code>对象交给我们的service层来执行具体的逻辑</p>
<p>判断是否可以加入我们的数据库<br>如果成功加入数据库，我们将请求重定向到成功的页面<br>否则重定向到失败的页面</p>
<p>这样，我们就完成了一个从前端到后台的交互。<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171003204110811.png" alt=""></p>
<h2 id="邮件模块"><a href="#邮件模块" class="headerlink" title="邮件模块"></a>邮件模块</h2><p>关于邮件发送，我的博客之前也介绍过<br>有兴趣的话可以去 这篇<a href="http://blog.chenwe.top/2017/07/18/2017/SpringBoot%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/">SpringBoot发送邮件</a>看下</p>
<h2 id="定时模块"><a href="#定时模块" class="headerlink" title="定时模块"></a>定时模块</h2><p>关于定时，我的博客之前也介绍过<br>有兴趣的话可以去，这篇<a href="http://blog.chenwe.top/2017/07/20/2017/SpringBoot%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/">SpringBoot定时任务</a>看下</p>
<p>我这里讲下我这个推送的思路</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Scheduled</span>(cron = <span class="string">"0 0 7,8,9,10,11,12,13,14,15,16,17,18 * * ?"</span>)</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">()</span> </span>&#123;</div><div class="line">    System.out.println(<span class="string">"这个是定时任务第 "</span> + (count++) + <span class="string">" 次执行"</span>);</div><div class="line"></div><div class="line">    List&lt;Subscription&gt; list = subscriptionRepository.findBySended(<span class="keyword">false</span>);</div><div class="line">    <span class="keyword">if</span> (list == <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (Subscription sub:</div><div class="line">         list) &#123;</div><div class="line">        String email = sub.getEmail();</div><div class="line">        String url = sub.getUrl();</div><div class="line">        libSpider.Get_Url(url, email);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>我在每天白天每隔一个小时，自动开始运行这个服务<br>我们先获取之前在数据库登记的所有的订阅的且没发送过邮件的数据<br>遍历这个<code>List</code><br>获取url和邮箱，交给我们的爬虫邮件服务去处理<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Get_Url</span><span class="params">(String url, String email)</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        Boolean is_inLib = <span class="keyword">false</span>;</div><div class="line">        String[] book_info = <span class="keyword">new</span> String[<span class="number">7</span>];</div><div class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</div><div class="line"></div><div class="line">        <span class="comment">//Jsoup来提取图书馆藏信息</span></div><div class="line">        Document doc = Jsoup.connect(url)</div><div class="line">                <span class="comment">//.data("query", "Java")</span></div><div class="line">                .userAgent(<span class="string">"'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '                            'Chrome/51.0.2704.63 Safari/537.36'"</span>)</div><div class="line">                <span class="comment">//.cookie("auth", "token")</span></div><div class="line">                .timeout(<span class="number">10000</span>)</div><div class="line">                <span class="comment">//.post()</span></div><div class="line">                .get();</div><div class="line"></div><div class="line">        Elements elements = doc.select(<span class="string">".whitetext td"</span>);</div><div class="line">        <span class="keyword">for</span> (Element ele : elements) &#123;</div><div class="line">            String text = ele.text();               <span class="comment">//获取当前标签（元素）的文本值</span></div><div class="line"></div><div class="line">            <span class="keyword">if</span> (count &lt; <span class="number">5</span>) &#123;</div><div class="line">                book_info[count] = text;</div><div class="line">                count ++;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (text.equals(<span class="string">"可借"</span>)) &#123;</div><div class="line">                is_inLib = <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (is_inLib) &#123;</div><div class="line">            <span class="comment">//正则表达式找出书名</span></div><div class="line">            String result = <span class="string">""</span>;</div><div class="line">            Pattern pattern = Pattern.compile(<span class="string">"document.title = \"(.*?)\";"</span>);</div><div class="line">            Matcher matcher = pattern.matcher(doc.toString());</div><div class="line">            <span class="keyword">while</span> (matcher.find()) &#123;</div><div class="line">                System.out.println(matcher.group(<span class="number">1</span>));</div><div class="line">                Book book = <span class="keyword">new</span> Book(book_info[<span class="number">0</span>], <span class="string">"《"</span> + matcher.group(<span class="number">1</span>) + <span class="string">"》"</span>, book_info[<span class="number">1</span>], book_info[<span class="number">3</span>]);</div><div class="line">                <span class="keyword">if</span> (mailUtil.sendGetBookMail(email, book)) &#123;</div><div class="line">                    List&lt;Subscription&gt; list = subscriptionRepository.findByEmailAndAndUrlAndAndSended(email, url, <span class="keyword">false</span>);</div><div class="line">                    <span class="keyword">for</span> (Subscription sub:</div><div class="line">                            list) &#123;</div><div class="line">                        sub.setSended(<span class="keyword">true</span>);</div><div class="line">                        subscriptionRepository.save(sub);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>爬虫获取对应URL的数据<br>如果图书到馆，那么将图书的相关信息通过邮件服务发送给我们的订阅者</p>
<p>邮件服务会生成一封HTML邮件，将图书相关数据发送到订阅者邮箱<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171003205045713.png" alt=""></p>
<p><strong>这样我们的整个功能就实现了<br>接下来就是部署了<br>请听下回博客分解</strong><br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171003205141163.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上回书说到&lt;br&gt;Linux数据库的配置以及远程连接&lt;/p&gt;
&lt;p&gt;这次我们来讲下具体功能的实现&lt;br&gt;&lt;img src=&quot;http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171003202042469.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://blog.chenwe.top/categories/SpringBoot/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>图书信息推送系统（一）</title>
    <link href="http://blog.chenwe.top/2017/10/01/2017/2017-10-01%20%E5%9B%BE%E4%B9%A6%E4%BF%A1%E6%81%AF%E6%8E%A8%E9%80%81%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://blog.chenwe.top/2017/10/01/2017/2017-10-01 图书信息推送系统（一）/</id>
    <published>2017-10-01T07:46:23.184Z</published>
    <updated>2017-10-01T08:54:58.321Z</updated>
    
    <content type="html"><![CDATA[<p>之前把实验室的一台废弃的主机改装成了Ubuntu系统<br>于是我准备把它拿来搞事请</p>
<p>我们学校的图书馆虽然可以网上查询图书信息<br>但是却没有提供图书到馆通知的功能<br>有时候想借一本书，但是却被别人借走了<br>自己就要时不时关注图书的信息，十分麻烦<br>所以，开始搞事<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171001155255849.png" alt=""></p>
<a id="more"></a>
<h2 id="搞什么事"><a href="#搞什么事" class="headerlink" title="搞什么事"></a>搞什么事</h2><p>做一个用邮件推送的图书到馆信息推送系统</p>
<h2 id="用到哪些东西"><a href="#用到哪些东西" class="headerlink" title="用到哪些东西"></a>用到哪些东西</h2><ul>
<li><p>java爬虫<br>用来获取图书信息</p>
</li>
<li><p>SpringBoot<br>用来搭建网站以及整合与管理后台服务</p>
</li>
<li><p>MySql关系数据库<br>用来存储订阅信息</p>
</li>
</ul>
<h2 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h2><p>开发环境的数据库配置这里就不多说了<br>网上相关教程有很多</p>
<p>这里讲下在Linux下配置数据库 并远程连接管理</p>
<h3 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h3><p>安装的方法有很多<br>这里讲下 apt-get的方式<br>在终端输入命令<br><code>sudo apt-get install mysql-server mysql-client</code><br>安装过程中会让你设置一个数据库密码</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>安装完成后<br>我们先进入mysql<br><code>mysql -u root -p</code><br>输入密码 进入后<br>输入 <code>GRANT ALL PRIVILEGES ON *.* TO &lt;用户名&gt;@&quot;%&quot; IDENTIFIED BY &#39;&lt;密码&gt;&#39; WITH GRANT OPTION;</code><br>创建一个远程连接的用户<br>再输入 <code>FLUSH RIVILEGES;</code>刷新权限表</p>
<p>退出mysql</p>
<p>修改mysql的配置文件<br><code>vi /etc/mysql/my.cnf</code><br>把里面的 <code>127.0.0.1</code>那行 用 <code>#</code>注释掉</p>
<p>启动mysql服务<code>sudo service mysql start</code></p>
<h3 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h3><p>现在我们就可以远程连接了<br>这里我用的是MySQL Workbench<br>新建一个连接<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171001164625658.png" alt=""><br>填好相应的内容</p>
<p>如果前面都是正确的话 应该就成功连上了</p>
<p><strong>这样我们就配好了数据库<br>接下来就是写代码来实现功能了<br>下次再讲吧</strong></p>
<p><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171001164957520.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前把实验室的一台废弃的主机改装成了Ubuntu系统&lt;br&gt;于是我准备把它拿来搞事请&lt;/p&gt;
&lt;p&gt;我们学校的图书馆虽然可以网上查询图书信息&lt;br&gt;但是却没有提供图书到馆通知的功能&lt;br&gt;有时候想借一本书，但是却被别人借走了&lt;br&gt;自己就要时不时关注图书的信息，十分麻烦&lt;br&gt;所以，开始搞事&lt;br&gt;&lt;img src=&quot;http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20171001155255849.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://blog.chenwe.top/categories/SpringBoot/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot中的缓存支持</title>
    <link href="http://blog.chenwe.top/2017/09/15/2017/2017-09-15%20Spring%20Boot%E4%B8%AD%E7%9A%84%E7%BC%93%E5%AD%98%E6%94%AF%E6%8C%81/"/>
    <id>http://blog.chenwe.top/2017/09/15/2017/2017-09-15 Spring Boot中的缓存支持/</id>
    <published>2017-09-15T08:22:03.250Z</published>
    <updated>2017-09-15T08:44:11.894Z</updated>
    
    <content type="html"><![CDATA[<p>当数据库的数据规模越来越大的时候<br>数据库的查询容易变成影响用户体验的瓶颈<br>是时候加入缓存来提高性能了<br><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20170915162439368.png" alt=""></p>
<a id="more"></a>
<h2 id="有哪些缓存工具"><a href="#有哪些缓存工具" class="headerlink" title="有哪些缓存工具"></a>有哪些缓存工具</h2><p>常见的有Redis 和 EhCache<br>今天讲下EhCache</p>
<h2 id="EhCache"><a href="#EhCache" class="headerlink" title="EhCache"></a>EhCache</h2><blockquote>
<p>EhCache 是一个纯Java的进程内缓存框架，具有快速、精干等特点，是Hibernate中默认的CacheProvider。</p>
</blockquote>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>pom.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.ehcache<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>添加完依赖后<br>在resources目录下新建 <code>ehcache.xml</code>文件<br>ehcache.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line">         <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">"ehcache.xsd"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"powers"</span></span></div><div class="line">           <span class="attr">maxEntriesLocalHeap</span>=<span class="string">"200"</span></div><div class="line">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"10"</span>&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">cache</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>这里的<code>timeToLiveSeconds</code>是更新时间<br>这里我们设置10秒钟后自动更新数据</p>
<p>在启动类中添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">@SpringBootApplication</div><div class="line">@EnableCaching</div></pre></td></tr></table></figure></p>
<p>在Repository中添加<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@CacheConfig</span>(cacheNames = <span class="string">"powers"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PowerRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Power</span>, <span class="title">Integer</span>&gt; </span>&#123;</div><div class="line">    <span class="meta">@Cacheable</span></div><div class="line">    <span class="function">List&lt;Power&gt; <span class="title">findAll</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这里我们把<code>cacheNames</code>和前面的配置里对应<br>在要缓存的地方写上<code>@Cacheable</code></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>先在 <code>application.properties</code>中添加显示sql<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">spring.jpa.show-sql=true</div></pre></td></tr></table></figure></p>
<p>在测试类中<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Autowired</span></div><div class="line"><span class="keyword">private</span> PowerService powerService;</div><div class="line"></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">totest</span><span class="params">()</span> </span>&#123;</div><div class="line">  List&lt;Power&gt; list1 = powerService.findAll();</div><div class="line">  System.out.println(<span class="string">"第一次查询："</span> + list1.get(<span class="number">0</span>));</div><div class="line"></div><div class="line">  List&lt;Power&gt; list2 = powerService.findAll();</div><div class="line">  System.out.println(<span class="string">"第二次查询："</span> + list2.get(<span class="number">0</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>写好测试类开始测试<br>打印出结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Hibernate: select power0_.power_id as power_id1_1_, power0_.building_name as building2_1_, power0_.date_num as date_num3_1_, power0_.dorm_num as dorm_num4_1_, power0_.residual_electricity as residual5_1_ from lowpower power0_</div><div class="line">第一次查询：com.example.demo.domain.Power@1ae90cb9</div><div class="line">第二次查询：com.example.demo.domain.Power@1ae90cb9</div></pre></td></tr></table></figure></p>
<p>我们发现第二次查询是没有打印出sql语句的<br>因为我们在第一次查询后，就把数据缓存了</p>
<p>因为我们设置了10秒钟更新缓存数据<br>所以如果在外部改变数据库的一些字段<br>查询在10秒后也能得到更新<br>这里就不演示了</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>利用缓存来优化数据库<br>可以减缓数据库的压力<br>改善用户体验</p>
<p><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20170915163858970.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当数据库的数据规模越来越大的时候&lt;br&gt;数据库的查询容易变成影响用户体验的瓶颈&lt;br&gt;是时候加入缓存来提高性能了&lt;br&gt;&lt;img src=&quot;http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20170915162439368.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://blog.chenwe.top/categories/SpringBoot/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>数据库RAID简介</title>
    <link href="http://blog.chenwe.top/2017/09/14/2017/2017-09-14%20%E6%95%B0%E6%8D%AE%E5%BA%93RAID%E7%AE%80%E4%BB%8B/"/>
    <id>http://blog.chenwe.top/2017/09/14/2017/2017-09-14 数据库RAID简介/</id>
    <published>2017-09-14T08:04:23.254Z</published>
    <updated>2017-09-15T08:44:10.696Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>RAID （ Redundant Array of Independent Disks ）即独立磁盘冗余阵列，通常简称为磁盘阵列。 简单地说， RAID 是由多个独立的高性能磁盘驱动器组成的磁盘子系统，从而提供比单个磁盘更高的存储性能和数据冗余的技术。</p>
</blockquote>
<p><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20170914160646934.png" alt=""></p>
<a id="more"></a>
<h2 id="有哪些RAID"><a href="#有哪些RAID" class="headerlink" title="有哪些RAID"></a>有哪些RAID</h2><p>常见的有6种RAID类型<br>RAID 等级 | RAID0 | RAID1 | RAID5 | RAID6 | RAID10 |</p>
<p>这里我们简单的介绍一下 RAID0 RAID1 RAID5 RAID10</p>
<h2 id="RAID0"><a href="#RAID0" class="headerlink" title="RAID0"></a>RAID0</h2><p><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-2017091416153039.png" alt=""></p>
<blockquote>
<p>RAID 0又称为Stripe或Striping，它代表了所有RAID级别中最高的存储性能。RAID 0提高存储性能的原理是把连续的数据分散到多个磁盘上存取，这样，系统有数据请求就可以被多个磁盘并行的执行，每个磁盘执行属于它自己的那部分数据请求。这种数据上的并行操作可以充分利用总线的带宽，显著提高磁盘整体存取性能。</p>
</blockquote>
<p>RAID0 没有数据冗余，没有数据校验的磁盘阵列。<br>实现它需要至少两块以上的硬盘，将两个硬盘并成一块，数据连续分割在各个盘上。<br>因为带宽加倍，所以读写速度加倍，但是在提高速度的同时，却带来了安全上的问题。<br>只要任何一块硬盘损坏就会丢失所有数据。因此RAID 0 不可应用于需要数据高可用性的关键领域。</p>
<h2 id="RAID1"><a href="#RAID1" class="headerlink" title="RAID1"></a>RAID1</h2><p><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-2017091416172531.png" alt=""></p>
<blockquote>
<p>RAID 1通过磁盘数据镜像实现数据冗余，在成对的独立磁盘上产生互 为备份的数据。当原始数据繁忙时，可直接从镜像拷贝中读取数据，因此RAID 1可以提高读取性能。RAID 1是磁盘阵列中单位成本最高的，但提供了很高的数据安全性和可用性。当一个磁盘失效时，系统可以自动切换到镜像磁盘上读写，而不需要重组失效的数据。</p>
</blockquote>
<p>RAID1是将一个两块硬盘所构成RAID磁盘阵列。<br>其容量仅等于一块硬盘的容量，因为另一块只是当作数据“镜像”。<br>在提升速度的时候，也保护了数据的安全，但是成本较高。</p>
<h2 id="RAID5"><a href="#RAID5" class="headerlink" title="RAID5"></a>RAID5</h2><p><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20170914161833407.png" alt=""></p>
<blockquote>
<p>RAID 5 是一种存储性能、数据安全和存储成本兼顾的存储解决方案。 RAID 5可以理解为是RAID 0和RAID 1的折中方案。RAID 5可以为系统提供数据安全保障，但保障程度要比Mirror低而磁盘空间利用率要比Mirror高。RAID 5具有和RAID 0相近似的数据读取速度，只是多了一个奇偶校验信息，写入数据的速度比对单个磁盘进行写入操作稍慢。同时由于多个数据对应一个奇偶校验信息，RAID 5的磁盘空间利用率要比RAID 1高，存储成本相对较低，是目前运用较多的一种解决方案。</p>
</blockquote>
<p>RAID5 可以通过<a href="https://baike.baidu.com/item/%E5%A5%87%E5%81%B6%E6%A0%A1%E9%AA%8C" target="_blank" rel="external">奇偶校验</a>来恢复损坏的盘的数据<br>但是只能损坏一块硬盘，如果同时损坏两块硬盘，那么数据也是无法恢复</p>
<h2 id="RAID10"><a href="#RAID10" class="headerlink" title="RAID10"></a>RAID10</h2><p><img src="http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20170914162321744.png" alt=""></p>
<blockquote>
<p>Raid 10是一个Raid 1与Raid0的组合体，它是利用奇偶校验实现条带集镜像，所以它继承了Raid0的快速和Raid1的安全。我们知道，RAID 1在这里就是一个冗余的备份阵列，而RAID 0则负责数据的读写阵列。其实，右图只是一种RAID 10方式，更多的情况是从主通路分出两路，做Striping操作，即把数据分割，而这分出来的每一路则再分两路，做Mirroring操作，即互做镜像。</p>
</blockquote>
<p>RAID10 将 RAID0 RAID1 的标准相结合<br>在连续地以位或字节为单位分割数据并且并行读/写多个磁盘的同时，为每一块磁盘作磁盘镜像进行冗余。<br>它有效的吸收了两者的优点<br>这种结构的可扩充性不好，这种解决方案被广泛应用，使用此方案比较昂贵。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;RAID （ Redundant Array of Independent Disks ）即独立磁盘冗余阵列，通常简称为磁盘阵列。 简单地说， RAID 是由多个独立的高性能磁盘驱动器组成的磁盘子系统，从而提供比单个磁盘更高的存储性能和数据冗余的技术。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://ow9eu3p52.bkt.clouddn.com/markdown-img-paste-20170914160646934.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://blog.chenwe.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>获取Cookie时中文乱码</title>
    <link href="http://blog.chenwe.top/2017/09/11/2017/%E8%8E%B7%E5%8F%96Cookie%E6%97%B6%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
    <id>http://blog.chenwe.top/2017/09/11/2017/获取Cookie时中文乱码/</id>
    <published>2017-09-11T08:45:12.450Z</published>
    <updated>2017-09-11T08:53:06.240Z</updated>
    
    <content type="html"><![CDATA[<p>在获取Cookie时出现了中文乱码<br>服务器传来的数据是正常的，没有乱码</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/wenhao.jpg" alt=""></p>
<a id="more"></a>
<h2 id="如何解决"><a href="#如何解决" class="headerlink" title="如何解决"></a>如何解决</h2><p>这里先放出正确的代码(已Vue为例<br>  )<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//设置Cookie</span></div><div class="line">Vue.prototype.setCookie = <span class="function">(<span class="params">c_name, value, expiredays</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">var</span> exdate = <span class="keyword">new</span> <span class="built_in">Date</span>();　　　　</div><div class="line">  exdate.setDate(exdate.getDate() + expiredays);　　　　</div><div class="line">  <span class="built_in">document</span>.cookie = c_name + <span class="string">"="</span> + <span class="built_in">escape</span>(value) + ((expiredays == <span class="literal">null</span>) ? <span class="string">""</span> : <span class="string">";expires="</span> + exdate.toGMTString());</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>在设置Cookie里<code>escape()</code>函数进行了编码<br>它能将一些特殊符号使用十六进制表示</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//获取cookie、</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">name</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> arr, reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^| )"</span> + name + <span class="string">"=([^;]*)(;|$)"</span>);</div><div class="line">  <span class="keyword">if</span> (arr = <span class="built_in">document</span>.cookie.match(reg))</div><div class="line">    <span class="keyword">return</span> <span class="built_in">unescape</span>(arr[<span class="number">2</span>]);</div><div class="line">  <span class="keyword">else</span></div><div class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这里的<code>unescape()</code>函数可对通过<code>escape()</code> 编码的字符串进行解码。</p>
<p>这样我们就可以在获取Cookie的时候不会出现中文乱码了</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在获取Cookie时出现了中文乱码&lt;br&gt;服务器传来的数据是正常的，没有乱码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/wenhao.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Cookie" scheme="http://blog.chenwe.top/categories/Cookie/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js去掉链接里的井号</title>
    <link href="http://blog.chenwe.top/2017/09/10/2017/Vue.js%E5%8E%BB%E6%8E%89%E9%93%BE%E6%8E%A5%E9%87%8C%E7%9A%84%E4%BA%95%E5%8F%B7/"/>
    <id>http://blog.chenwe.top/2017/09/10/2017/Vue.js去掉链接里的井号/</id>
    <published>2017-09-10T06:37:51.431Z</published>
    <updated>2017-09-11T14:10:54.250Z</updated>
    
    <content type="html"><![CDATA[<p>在用vue-router的时候<br>有时候会在连接里会出现一个 #<br>不太美观</p>
<p>要怎么去掉呢？<br><img src="http://otj6w86xd.bkt.clouddn.com/huajizuo.jpg" alt=""></p>
<a id="more"></a>
<h2 id="为什么会有井号-？"><a href="#为什么会有井号-？" class="headerlink" title="为什么会有井号 #？"></a>为什么会有井号 #？</h2><p>因为vue-router 默认 hash 模式 —— 使用 URL 的 hash 来模拟一个完整的 URL，于是当 URL 改变时，页面不会重新加载。</p>
<h2 id="怎么去掉？"><a href="#怎么去掉？" class="headerlink" title="怎么去掉？"></a>怎么去掉？</h2><p>如果不想要很丑的 hash，我们可以用路由的 history 模式，这种模式充分利用 history.pushState API 来完成 URL 跳转而无须重新加载页面。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">const router = new VueRouter(&#123;</div><div class="line">  mode: &apos;history&apos;,</div><div class="line">  routes: [...]</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>这样连接中的 # 就没了</p>
<p>更加详细的说明可以参考 <a href="https://router.vuejs.org/zh-cn/essentials/history-mode.html" target="_blank" rel="external">文档</a></p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在用vue-router的时候&lt;br&gt;有时候会在连接里会出现一个 #&lt;br&gt;不太美观&lt;/p&gt;
&lt;p&gt;要怎么去掉呢？&lt;br&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/huajizuo.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://blog.chenwe.top/categories/Vue/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js平行组件之间通信</title>
    <link href="http://blog.chenwe.top/2017/09/09/2017/Vue.js%E5%B9%B3%E8%A1%8C%E7%BB%84%E4%BB%B6%E4%B9%8B%E9%97%B4%E9%80%9A%E4%BF%A1/"/>
    <id>http://blog.chenwe.top/2017/09/09/2017/Vue.js平行组件之间通信/</id>
    <published>2017-09-09T03:14:03.850Z</published>
    <updated>2017-09-11T14:10:50.257Z</updated>
    
    <content type="html"><![CDATA[<p>在用Vue.js做项目的时候<br>有时候会需要平行组件（非父子组件）之间传递数据的情况</p>
<p>该怎么做呢？<br><img src="http://otj6w86xd.bkt.clouddn.com/bqb-cm.jpg" alt=""></p>
<a id="more"></a>
<h2 id="该怎么办？"><a href="#该怎么办？" class="headerlink" title="该怎么办？"></a>该怎么办？</h2><p>用eventBus来实现</p>
<p>在原来的Vue1.0中组件之间的通信主要通过vm.$dispatch沿着父链向上传播和用vm.$broadcast向下广播来实现。<br>在vue2.0中，已经废除了这种用法。<br>在Vue2.0中可以使用Vuex</p>
<blockquote>
<p>Vuex基于SPA的应用，使用全局state共享数据，达到组件与组件间的通讯。如果你没有开发过大型的单页应用(SPA)就立刻上 Vuex，可能会觉得繁琐然后排斥，这是很正常的 —— 如果是个简单的应用，大多数情况下，不用 Vuex 还好，你要的可能就是个简单的 全局事件总线(global event bus)。不过，如果你构建的是一个中到大型单页应用，当你在考虑如何更好的在 Vue 组件外处理状态时，Vuex 自然就是你的下一步选择。</p>
</blockquote>
<p>如果我们的项目只是一个简单的应用也可以不用Vuex<br>用eventBus来实现</p>
<h2 id="如何实现"><a href="#如何实现" class="headerlink" title="如何实现"></a>如何实现</h2><p>先在common/js下创建一个js文件<br>命名为 bus.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vue();</div></pre></td></tr></table></figure></p>
<p>在要两个兄弟组件中引入bus<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> Bus <span class="keyword">from</span> <span class="string">'./js/bus.js'</span>;</div></pre></td></tr></table></figure></p>
<p>在事件发起组件中<br>我们假设有一个点击事件 <code>showLoginDia</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"el-dropdown-link"</span> @<span class="attr">click</span>=<span class="string">"showLoginDia($event)"</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>我们在showLoginDia中传入一个 event<br>在方法中利用bus来传递数据实现对另一个组件的通信<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Bus.$emit(<span class="string">'login'</span>, event.target);</div></pre></td></tr></table></figure></p>
<p>这样我们点击就通过Bus传递了一个点击事件的event.target名为<code>‘login’</code></p>
<p>然后我们在要接收的组件的 <code>created()</code>中调用bus监听事件<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Bus.$on(<span class="string">'login'</span>, target =&gt; &#123;</div><div class="line">  <span class="keyword">this</span>.$set(<span class="keyword">this</span>.items, <span class="number">2</span>, <span class="keyword">this</span>.bindDormItem);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<ul>
<li>这里我们用$set来更新数组，才能实时更新DOM</li>
</ul>
<p>这样在每次点击的时候，就能通过bus来传递事件到平行组件了</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在用Vue.js做项目的时候&lt;br&gt;有时候会需要平行组件（非父子组件）之间传递数据的情况&lt;/p&gt;
&lt;p&gt;该怎么做呢？&lt;br&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/bqb-cm.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://blog.chenwe.top/categories/Vue/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>使用Xpath来制作python3爬虫</title>
    <link href="http://blog.chenwe.top/2017/09/08/2017/%E4%BD%BF%E7%94%A8Xpath%E6%9D%A5%E5%88%B6%E4%BD%9Cpython3%E7%88%AC%E8%99%AB/"/>
    <id>http://blog.chenwe.top/2017/09/08/2017/使用Xpath来制作python3爬虫/</id>
    <published>2017-09-08T06:52:51.867Z</published>
    <updated>2017-09-08T10:59:59.223Z</updated>
    
    <content type="html"><![CDATA[<p>之前用Python3制作了一个爬虫<br>但是在服务器运行后<br>发现每隔一段时间<br>爬虫就会崩溃</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/wulian.jpg" alt=""></p>
<a id="more"></a>
<h2 id="问题的产生"><a href="#问题的产生" class="headerlink" title="问题的产生"></a>问题的产生</h2><p>发现每隔一段时间<br>爬虫就会崩溃<br>调查日志后发现是爬取的网页的一些样式变了<br>因为我用的是正则表达式来获取数据<br>所以一些样式变了会导致无法正常的获取数据</p>
<p>在知道问题后，我觉定用 Xpath来优化爬虫</p>
<h2 id="什么是Xpath"><a href="#什么是Xpath" class="headerlink" title="什么是Xpath"></a>什么是Xpath</h2><p>以下是Wiki的解释：</p>
<blockquote>
<p>XPath即为XML路径语言（XML Path Language），它是一种用来确定XML文档中某部分位置的语言。 XPath基于XML的树状结构，提供在数据结构树中找寻节点的能力。 起初XPath的提出的初衷是将其作为一个通用的、介于XPointer与XSL间的语法模型。</p>
</blockquote>
<p>如果用Xpath的话<br>就不会出现部分样式更改，而导致爬虫无法正常工作的情况出现了</p>
<h2 id="Xpath库的安装"><a href="#Xpath库的安装" class="headerlink" title="Xpath库的安装"></a>Xpath库的安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install lxml</div></pre></td></tr></table></figure>
<p> 如果是Python3<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install python3-lxml</div></pre></td></tr></table></figure></p>
<h2 id="Xpath的引用"><a href="#Xpath的引用" class="headerlink" title="Xpath的引用"></a>Xpath的引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">from lxml import etree</div></pre></td></tr></table></figure>
<h2 id="Xpath入门"><a href="#Xpath入门" class="headerlink" title="Xpath入门"></a>Xpath入门</h2><p>可以看下w3school里关于<a href="http://www.w3school.com.cn/xpath/index.asp" target="_blank" rel="external">Xpath的教程</a></p>
<h2 id="Xpath获取的小技巧"><a href="#Xpath获取的小技巧" class="headerlink" title="Xpath获取的小技巧"></a>Xpath获取的小技巧</h2><p>用chrome浏览器<br>按f12选中我们要的元素后<br>在HTML中 右键 -&gt; Copy -&gt; Copy Xpath<br>这样我们就复制了一段Xpath</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>我们在获取完HTML后<br>我们可以定义一个函数来格式化数据,返回xml结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">def getxpath(html):</div><div class="line">    return etree.HTML(html)</div></pre></td></tr></table></figure></p>
<p>然后我们调用这个方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">contentTree = getxpath(contentBytes)</div><div class="line">content = contentTree.xpath(&apos;//*[@id=&quot;weisite&quot;]/div[1]/div/section/table/tbody/tr/td/text()&apos;)</div></pre></td></tr></table></figure></p>
<p>这里的content是一个数组<br>表<code>tr</code>下的所有td元素里的text值</p>
<p>这样我们就用Xpath完成了一个简单的爬虫</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前用Python3制作了一个爬虫&lt;br&gt;但是在服务器运行后&lt;br&gt;发现每隔一段时间&lt;br&gt;爬虫就会崩溃&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/wulian.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMVC" scheme="http://blog.chenwe.top/categories/SpringMVC/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js中修改router-link的样式</title>
    <link href="http://blog.chenwe.top/2017/08/29/2017/Vue.js%E4%B8%AD%E4%BF%AE%E6%94%B9router-link%E7%9A%84%E6%A0%B7%E5%BC%8F/"/>
    <id>http://blog.chenwe.top/2017/08/29/2017/Vue.js中修改router-link的样式/</id>
    <published>2017-08-29T11:20:34.758Z</published>
    <updated>2017-09-11T14:11:03.262Z</updated>
    
    <content type="html"><![CDATA[<p>在用vue.js 的时候<br>有个地方用到了router-link<br>并且要修改router-link的样式</p>
<p>但是我发现直接修改router-link是不行的</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/wulian.jpg" alt=""></p>
<a id="more"></a>
<h2 id="该怎么办？"><a href="#该怎么办？" class="headerlink" title="该怎么办？"></a>该怎么办？</h2><p>其实router-link标签和a 标签是一样的<br>我们可以通过对a标签修改<br>达到修改router-link的目的</p>
<p>例如想实现类似手机APP顶部的tab标签<br>可以这样(styl语法)</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">&lt;template&gt;</div><div class="line">  &lt;div id="app"&gt;</div><div class="line">    &lt;div class="tab border-1px"&gt;</div><div class="line">      &lt;div class="tab-item"&gt;</div><div class="line">        &lt;router-link to="/goods"&gt;商品&lt;/router-link&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">      &lt;div class="tab-item"&gt;</div><div class="line">        &lt;router-link to="/ratings"&gt;评论&lt;/router-link&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">      &lt;div class="tab-item"&gt;</div><div class="line">        &lt;router-link to="/seller"&gt;商家&lt;/router-link&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">  &lt;/div&gt;</div><div class="line">&lt;/template&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">export default &#123;</div><div class="line">  name: 'app'</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line"></div><div class="line">&lt;style lang="stylus" rel="stylesheet/stylus"&gt;</div><div class="line">    .tab</div><div class="line">      display:flex</div><div class="line">      width: 100%</div><div class="line">      height: 40px</div><div class="line">      line-height: 40px</div><div class="line">      border-1px(rgba(7, 17, 27, 0.1))</div><div class="line">      .tab-item</div><div class="line">        flex: 1</div><div class="line">        text-align: center</div><div class="line">        &amp; &gt; a</div><div class="line">          display: block</div><div class="line">          font-size: 14px</div><div class="line">          color: rgb(77, 85, 93)</div><div class="line">          &amp;.active</div><div class="line">            color: rgb(240, 20, 20)</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure>
<p>效果图：</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/ele-tab.png" alt=""></p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/bqb-bcm.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在用vue.js 的时候&lt;br&gt;有个地方用到了router-link&lt;br&gt;并且要修改router-link的样式&lt;/p&gt;
&lt;p&gt;但是我发现直接修改router-link是不行的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/wulian.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://blog.chenwe.top/categories/Vue/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js中使用axios数据赋值报错</title>
    <link href="http://blog.chenwe.top/2017/08/28/2017/Vue.js%E4%B8%AD%E4%BD%BF%E7%94%A8axios%E6%95%B0%E6%8D%AE%E8%B5%8B%E5%80%BC%E6%8A%A5%E9%94%99/"/>
    <id>http://blog.chenwe.top/2017/08/28/2017/Vue.js中使用axios数据赋值报错/</id>
    <published>2017-08-28T09:04:57.623Z</published>
    <updated>2017-09-11T14:10:59.690Z</updated>
    
    <content type="html"><![CDATA[<p>在用vue.js的axios插件来获取数据的时候<br>踩了一个坑</p>
<p>获取到的数据对象不能赋值给变量</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/bqb-cm.jpg" alt=""></p>
<a id="more"></a>
<h2 id="问题的代码"><a href="#问题的代码" class="headerlink" title="问题的代码"></a>问题的代码</h2><p>问题代码<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">data() &#123;</div><div class="line">  <span class="keyword">return</span> &#123;</div><div class="line">    <span class="attr">seller</span>: &#123;&#125;,</div><div class="line">  &#125;</div><div class="line">&#125;,</div><div class="line"><span class="attr">methods</span>: &#123;</div><div class="line">  getData() &#123;</div><div class="line">    axios.get(<span class="string">'./static/data.json'</span>)</div><div class="line">    .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</div><div class="line">      <span class="keyword">this</span>.seller = response.data.seller;</div><div class="line">    &#125;)</div><div class="line">    .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(error);</div><div class="line">    &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>我想通过axios来获取data.json里面的seller对象<br>然后赋值给我们的seller<br>但是会报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">TypeError: Cannot set property &apos;seller&apos; of undefined</div><div class="line">    at eval (App.vue?87b3:54)</div><div class="line">    at &lt;anonymous&gt;</div></pre></td></tr></table></figure></p>
<p>它说我们不能赋值给seller</p>
<p>一开始我怀疑是不是数据没拿到<br>于是打印数据<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(response.data.seller);</div></pre></td></tr></table></figure></p>
<p>发现是可以的<br>也就是说是赋值的时候出现了问题</p>
<h2 id="问题的原因"><a href="#问题的原因" class="headerlink" title="问题的原因"></a>问题的原因</h2><p>经过自己的网上资料查找<br>找到了问题的原因</p>
<p>因为 this 指向更改了<br>所以 this.seller 是拿不到对象的<br>（上面的代码可是官方推荐的代码。。居然容易踩坑）</p>
<h2 id="问题的解决"><a href="#问题的解决" class="headerlink" title="问题的解决"></a>问题的解决</h2><p>使用箭头函数来获取数据</p>
<p>示例代码:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">axios.get(<span class="string">'./static/data.json'</span>).then(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">this</span>.seller = response.data.seller;</div><div class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.seller);</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>用箭头函数来实现后<br>就不会报错了<br>问题也解决了</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/bqb-bcm.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在用vue.js的axios插件来获取数据的时候&lt;br&gt;踩了一个坑&lt;/p&gt;
&lt;p&gt;获取到的数据对象不能赋值给变量&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/bqb-cm.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://blog.chenwe.top/categories/Vue/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>手机连接本地服务器调试</title>
    <link href="http://blog.chenwe.top/2017/08/27/2017/%E6%89%8B%E6%9C%BA%E8%BF%9E%E6%8E%A5%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B0%83%E8%AF%95/"/>
    <id>http://blog.chenwe.top/2017/08/27/2017/手机连接本地服务器调试/</id>
    <published>2017-08-27T08:49:21.822Z</published>
    <updated>2017-08-27T08:58:59.219Z</updated>
    
    <content type="html"><![CDATA[<p>有时候我们要做一个面向手机端的项目<br>比如一个面向手机端的网页<br>我们在预览的时候，虽然可以用chrome浏览器的手机模式来预览<br>但是因为像素的关系<br>所以和实际手机端的表现还是有些差异的<br>最好的办法就是在手机端直接预览</p>
<p>那么该怎么办呢</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
<a id="more"></a>
<h2 id="找到本机的ip地址"><a href="#找到本机的ip地址" class="headerlink" title="找到本机的ip地址"></a>找到本机的ip地址</h2><p>打开cmd(或者cmder)<br>输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ipconfig</div></pre></td></tr></table></figure></p>
<p>然后就会获取到本机的ip信息<br>我们要的是这里<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">无线局域网适配器 WLAN:</div><div class="line"></div><div class="line">   连接特定的 DNS 后缀 . . . . . . . :</div><div class="line">   本地链接 IPv6 地址. . . . . . . . : fe80::30cd:b5f:ec67:3054%16</div><div class="line">   IPv4 地址 . . . . . . . . . . . . : 192.168.1.105</div><div class="line">   子网掩码  . . . . . . . . . . . . : 255.255.255.0</div><div class="line">   默认网关. . . . . . . . . . . . . : 192.168.1.1</div></pre></td></tr></table></figure></p>
<p>里面的 IPv4 地址<br>也就是<code>192.168.1.105</code></p>
<p>如果我们要访问本机的<br><a href="http://localhost:8080/goods" target="_blank" rel="external">http://localhost:8080/goods</a><br>地址<br>我们在手机上打开是没用的，因为localhost 只是本机的地址</p>
<p>所以我们要把localhost 替换为 刚刚得到的ip地址<br>最终网址成了 <a href="http://192.168.1.105:8080/goods" target="_blank" rel="external">http://192.168.1.105:8080/goods</a></p>
<p>为了方便使用<br>我们可以去 <a href="https://cli.im" target="_blank" rel="external">草料</a>把我们的连接生成一个二维码<br>然后用手机来扫一扫就可以访问了（要确保手机和电脑处在同一局域网中）</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有时候我们要做一个面向手机端的项目&lt;br&gt;比如一个面向手机端的网页&lt;br&gt;我们在预览的时候，虽然可以用chrome浏览器的手机模式来预览&lt;br&gt;但是因为像素的关系&lt;br&gt;所以和实际手机端的表现还是有些差异的&lt;br&gt;最好的办法就是在手机端直接预览&lt;/p&gt;
&lt;p&gt;那么该怎么办呢&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/lianhong.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="测试" scheme="http://blog.chenwe.top/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Mysql登录报错的问题</title>
    <link href="http://blog.chenwe.top/2017/08/18/2017/Mysql%E7%99%BB%E5%BD%95%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://blog.chenwe.top/2017/08/18/2017/Mysql登录的问题/</id>
    <published>2017-08-18T14:09:27.908Z</published>
    <updated>2017-09-11T14:53:42.298Z</updated>
    
    <content type="html"><![CDATA[<p>之前有一天我服务器里的mysql突然远程连接不上了<br>MySQL WorkBench 连上显示无法读取数据，丢失部分文件<br><img src="http://otj6w86xd.bkt.clouddn.com/wenhao.jpg" alt=""><br><a id="more"></a><br>我用ssh登录出现以下报错</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&apos;Access denied for user &apos;root&apos;@&apos;localhost&apos; (using password: YES)&apos;</div></pre></td></tr></table></figure>
<p>经过资料查找<br>找到了解决方法</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>输入以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"># /etc/init.d/mysql stop</div><div class="line"></div><div class="line"># mysqld_safe --user=mysql --skip-grant-tables --skip-networking &amp;</div><div class="line"></div><div class="line"># mysql -u root mysql</div><div class="line"></div><div class="line">mysql&gt; UPDATE user SET Password=PASSWORD(&apos;新密码&apos;) where USER=&apos;root&apos;;</div><div class="line"></div><div class="line">mysql&gt; FLUSH PRIVILEGES;</div><div class="line"></div><div class="line">mysql&gt; quit</div><div class="line"></div><div class="line"># /etc/init.d/mysql restart</div><div class="line"></div><div class="line"># mysql -uroot -p</div><div class="line"></div><div class="line">Enter password: &lt;新密码&gt;</div><div class="line"></div><div class="line">mysql&gt;</div></pre></td></tr></table></figure></p>
<p>这样我就解决了不能登录的问题</p>
<p>下面我们来配置下远程 MySQL WorkBench连接的配置吧</p>
<h2 id="MySQL-WorkBench远程连接"><a href="#MySQL-WorkBench远程连接" class="headerlink" title="MySQL WorkBench远程连接"></a>MySQL WorkBench远程连接</h2><ul>
<li><p>开放mysql<br>mysql的配置文件在/etc/mysql/my.cnf文件内，里面有一行bind-address = 127.0.0.1表示只允许本地访问，将这行注释即可</p>
</li>
<li><p>创建新的mysql用户<br>在登录mysql后<br>输入以下命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GRANT ALL ON *.* to user@&apos;IP&apos; IDENTIFIED BY &apos;password&apos;;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>其中user表示需要创建用户的名字；IP表示哪台客户端想要访问mysql数据库<br>password表示密码 并赋予所有的权限。<br>如果想要所有IP都能登录<br>那么 将 <code>IP</code> 改成 <code>%</code> 即可</p>
<ul>
<li><p>刷新权限表</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLUSH PRIVILEGES;</div></pre></td></tr></table></figure>
</li>
<li><p>重启数据库</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service mysql restart</div></pre></td></tr></table></figure>
<ul>
<li>用MySQL WorkBench连接<br>新建一个连接<br>输入ip地址 和 用户名<br>就可以测试连接了<br>连接的方法是 TCP/IP</li>
</ul>
<p>这样，我们就做好了mysql的远程连接</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
<p>本篇部分内容参考自<br>简书 的<a href="http://www.jianshu.com/p/ae78ce8d8e14" target="_blank" rel="external">这个</a>解决方案<br>CSDN 的<a href="http://blog.csdn.net/gent__chen/article/details/51065723" target="_blank" rel="external">这个</a>解决方案</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前有一天我服务器里的mysql突然远程连接不上了&lt;br&gt;MySQL WorkBench 连上显示无法读取数据，丢失部分文件&lt;br&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/wenhao.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="MySql" scheme="http://blog.chenwe.top/categories/MySql/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>git detached HEAD状态的解决方法</title>
    <link href="http://blog.chenwe.top/2017/08/12/2017/git%20detached%20HEAD%E7%8A%B6%E6%80%81%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.chenwe.top/2017/08/12/2017/git detached HEAD状态的解决方法/</id>
    <published>2017-08-12T15:17:02.886Z</published>
    <updated>2017-08-12T15:24:01.536Z</updated>
    
    <content type="html"><![CDATA[<p>在用IDEA的时候<br>一不小心就进入detached HEAD状态了<br><img src="http://otj6w86xd.bkt.clouddn.com/bqb-cm.jpg" alt=""><br><a id="more"></a></p>
<h2 id="如何解决"><a href="#如何解决" class="headerlink" title="如何解决"></a>如何解决</h2><p>首先<br>把最新写好的代码保存下<br>commit上去</p>
<p>然后<br>切换到你最后一次正确的指针代码那里（这里以master为例）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout master</div></pre></td></tr></table></figure></p>
<p>创建一条新的分支来保存代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch tempp aa63314</div></pre></td></tr></table></figure></p>
<p>这里的aa63314是我最后一次commit的</p>
<p>然后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git merge tempp</div></pre></td></tr></table></figure></p>
<p>合并过去<br>这样我们就又恢复正常了<br><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在用IDEA的时候&lt;br&gt;一不小心就进入detached HEAD状态了&lt;br&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/bqb-cm.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="git" scheme="http://blog.chenwe.top/categories/git/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Android BottomNavigationView无法添加依赖</title>
    <link href="http://blog.chenwe.top/2017/08/08/2017/Android%20BottomNavigationView%E6%97%A0%E6%B3%95%E6%B7%BB%E5%8A%A0%E4%BE%9D%E8%B5%96/"/>
    <id>http://blog.chenwe.top/2017/08/08/2017/Android BottomNavigationView无法添加依赖/</id>
    <published>2017-08-08T13:49:31.414Z</published>
    <updated>2017-08-08T14:01:51.999Z</updated>
    
    <content type="html"><![CDATA[<p>今天在Android Studio上创建了一个Bottom Navigation Activity<br>但是创建完成后发现BottomNavigationView无法添加依赖<br><img src="http://otj6w86xd.bkt.clouddn.com/wenhao.jpg" alt=""><br><a id="more"></a></p>
<p>网上查找资料<br>发现他的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">com.android.support:design</div></pre></td></tr></table></figure></p>
<p>要25以上</p>
<p>而我的是24，所以就不能使用了</p>
<p>我们需要在 <code>dependencies</code> 里添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile &apos;com.android.support:design:25.1.0&apos;</div></pre></td></tr></table></figure></p>
<p>clean Project 就可以完成依赖了</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天在Android Studio上创建了一个Bottom Navigation Activity&lt;br&gt;但是创建完成后发现BottomNavigationView无法添加依赖&lt;br&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/wenhao.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://blog.chenwe.top/categories/Android/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>练字记录（一）</title>
    <link href="http://blog.chenwe.top/2017/08/04/2017/%E7%BB%83%E5%AD%97%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://blog.chenwe.top/2017/08/04/2017/练字记录（一）/</id>
    <published>2017-08-04T08:27:24.136Z</published>
    <updated>2017-08-04T08:46:16.704Z</updated>
    
    <content type="html"><![CDATA[<p>练字记录<br>每五天左右发一篇博客来记录<br>目前是楷书<br><img src="http://otj6w86xd.bkt.clouddn.com/huajizuo.jpg" alt=""></p>
<a id="more"></a>
<h2 id="为什么要练字？"><a href="#为什么要练字？" class="headerlink" title="为什么要练字？"></a>为什么要练字？</h2><p>打算把自己极丑的字改善下<br>陶冶情操</p>
<h2 id="之前有练过吗？"><a href="#之前有练过吗？" class="headerlink" title="之前有练过吗？"></a>之前有练过吗？</h2><p>以前练字，都是练得英文字<br>而且有一定效果<br>因为英文练字成效快，收益大<br>好的英文字能在作文中取得一定优势</p>
<h2 id="先从哪里练？"><a href="#先从哪里练？" class="headerlink" title="先从哪里练？"></a>先从哪里练？</h2><p>先练楷书吧<br>目前正在临摹 赵孟頫 的 《道德经》</p>
<h2 id="五天的记录"><a href="#五天的记录" class="headerlink" title="五天的记录"></a>五天的记录</h2><ul>
<li><p>2017年07月31日<br><img src="http://otj6w86xd.bkt.clouddn.com/zi01.jpg" alt=""></p>
</li>
<li><p>2017年08月01日<br><img src="http://otj6w86xd.bkt.clouddn.com/zi02.jpg" alt=""></p>
</li>
<li><p>2017年08月02日<br><img src="http://otj6w86xd.bkt.clouddn.com/zi03.jpg" alt=""></p>
</li>
<li><p>2017年08月03日<br><img src="http://otj6w86xd.bkt.clouddn.com/zi04.jpg" alt=""></p>
</li>
<li><p>2017年08月04日<br><img src="http://otj6w86xd.bkt.clouddn.com/zi05.jpg" alt=""></p>
</li>
</ul>
<p><img src="http://otj6w86xd.bkt.clouddn.com/ha.jpg" alt=""><br><strong>虽然自己的字还是很难看</strong><br><strong>但还是要坚持下去</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;练字记录&lt;br&gt;每五天左右发一篇博客来记录&lt;br&gt;目前是楷书&lt;br&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/huajizuo.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="练字" scheme="http://blog.chenwe.top/categories/%E7%BB%83%E5%AD%97/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="life" scheme="http://blog.chenwe.top/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot远程shell监控和管理</title>
    <link href="http://blog.chenwe.top/2017/08/03/2017/SpringBoot%E8%BF%9C%E7%A8%8Bshell%E7%9B%91%E6%8E%A7%E5%92%8C%E7%AE%A1%E7%90%86/"/>
    <id>http://blog.chenwe.top/2017/08/03/2017/SpringBoot远程shell监控和管理/</id>
    <published>2017-08-03T12:39:38.610Z</published>
    <updated>2017-08-03T12:57:05.140Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Boot支持集成一个称为’CRaSH’的Java shell<br>你可以在CRaSH中使用ssh或telnet命令连接到运行的应用<br><img src="http://otj6w86xd.bkt.clouddn.com/bucunzaide.jpg" alt=""></p>
<a id="more"></a>
<h2 id="首先我们要在SpringBoot里配置pom-xml文件"><a href="#首先我们要在SpringBoot里配置pom-xml文件" class="headerlink" title="首先我们要在SpringBoot里配置pom.xml文件"></a>首先我们要在SpringBoot里配置pom.xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-remote-shell<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="创建一个用户"><a href="#创建一个用户" class="headerlink" title="创建一个用户"></a>创建一个用户</h2><p>这步如果不做的话还是会有一个默认用户的<br>用户名是<code>user</code><br>密码当应用启动时会在控制台里打印出来</p>
<p>如果想自己定义一个用户<br>就在 <code>properties</code>文件里添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">management.shell.auth.simple.user.name=admin</div><div class="line">management.shell.auth.simple.user.password=123456</div></pre></td></tr></table></figure></p>
<p>这样你就生成了一个用户名是 admin<br>密码是 123456的用户了</p>
<h2 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h2><p>通过ssh 来登录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -p 2000 admin@localhost</div></pre></td></tr></table></figure>
<p>默认端口是 2000</p>
<p>连接成功后 通过help 来查看命名</p>
<p>至此，我们成功链接上了远程的SpringBoot项目<br><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spring Boot支持集成一个称为’CRaSH’的Java shell&lt;br&gt;你可以在CRaSH中使用ssh或telnet命令连接到运行的应用&lt;br&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/bucunzaide.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://blog.chenwe.top/categories/SpringBoot/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
</feed>
