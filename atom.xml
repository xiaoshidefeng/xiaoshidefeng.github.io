<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xiaoshidefeng的博客</title>
  <subtitle>一个计算机本科生</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.chenwe.top/"/>
  <updated>2017-09-11T08:53:06.240Z</updated>
  <id>http://blog.chenwe.top/</id>
  
  <author>
    <name>ChenWei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>获取Cookie时中文乱码</title>
    <link href="http://blog.chenwe.top/2017/09/11/%E8%8E%B7%E5%8F%96Cookie%E6%97%B6%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
    <id>http://blog.chenwe.top/2017/09/11/获取Cookie时中文乱码/</id>
    <published>2017-09-11T08:45:12.450Z</published>
    <updated>2017-09-11T08:53:06.240Z</updated>
    
    <content type="html"><![CDATA[<p>在获取Cookie时出现了中文乱码<br>服务器传来的数据是正常的，没有乱码</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/wenhao.jpg" alt=""></p>
<a id="more"></a>
<h2 id="如何解决"><a href="#如何解决" class="headerlink" title="如何解决"></a>如何解决</h2><p>这里先放出正确的代码(已Vue为例<br>  )<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//设置Cookie</span></div><div class="line">Vue.prototype.setCookie = <span class="function">(<span class="params">c_name, value, expiredays</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">var</span> exdate = <span class="keyword">new</span> <span class="built_in">Date</span>();　　　　</div><div class="line">  exdate.setDate(exdate.getDate() + expiredays);　　　　</div><div class="line">  <span class="built_in">document</span>.cookie = c_name + <span class="string">"="</span> + <span class="built_in">escape</span>(value) + ((expiredays == <span class="literal">null</span>) ? <span class="string">""</span> : <span class="string">";expires="</span> + exdate.toGMTString());</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>在设置Cookie里<code>escape()</code>函数进行了编码<br>它能将一些特殊符号使用十六进制表示</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//获取cookie、</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">name</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> arr, reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^| )"</span> + name + <span class="string">"=([^;]*)(;|$)"</span>);</div><div class="line">  <span class="keyword">if</span> (arr = <span class="built_in">document</span>.cookie.match(reg))</div><div class="line">    <span class="keyword">return</span> <span class="built_in">unescape</span>(arr[<span class="number">2</span>]);</div><div class="line">  <span class="keyword">else</span></div><div class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这里的<code>unescape()</code>函数可对通过<code>escape()</code> 编码的字符串进行解码。</p>
<p>这样我们就可以在获取Cookie的时候不会出现中文乱码了</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在获取Cookie时出现了中文乱码&lt;br&gt;服务器传来的数据是正常的，没有乱码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/wenhao.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Cookie" scheme="http://blog.chenwe.top/categories/Cookie/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js去掉链接里的#井号</title>
    <link href="http://blog.chenwe.top/2017/09/10/Vue.js%E5%8E%BB%E6%8E%89%E9%93%BE%E6%8E%A5%E9%87%8C%E7%9A%84#%E4%BA%95%E5%8F%B7/"/>
    <id>http://blog.chenwe.top/2017/09/10/Vue.js去掉链接里的#井号/</id>
    <published>2017-09-10T06:37:51.431Z</published>
    <updated>2017-09-10T06:55:18.600Z</updated>
    
    <content type="html"><![CDATA[<p>在用vue-router的时候<br>有时候会在连接里会出现一个 #<br>不太美观</p>
<p>要怎么去掉呢？<br><img src="http://otj6w86xd.bkt.clouddn.com/huajizuo.jpg" alt=""></p>
<a id="more"></a>
<h2 id="为什么会有井号-？"><a href="#为什么会有井号-？" class="headerlink" title="为什么会有井号 #？"></a>为什么会有井号 #？</h2><p>因为vue-router 默认 hash 模式 —— 使用 URL 的 hash 来模拟一个完整的 URL，于是当 URL 改变时，页面不会重新加载。</p>
<h2 id="怎么去掉？"><a href="#怎么去掉？" class="headerlink" title="怎么去掉？"></a>怎么去掉？</h2><p>如果不想要很丑的 hash，我们可以用路由的 history 模式，这种模式充分利用 history.pushState API 来完成 URL 跳转而无须重新加载页面。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">const router = new VueRouter(&#123;</div><div class="line">  mode: &apos;history&apos;,</div><div class="line">  routes: [...]</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>这样连接中的 # 就没了</p>
<p>更加详细的说明可以参考 <a href="https://router.vuejs.org/zh-cn/essentials/history-mode.html" target="_blank" rel="external">文档</a></p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在用vue-router的时候&lt;br&gt;有时候会在连接里会出现一个 #&lt;br&gt;不太美观&lt;/p&gt;
&lt;p&gt;要怎么去掉呢？&lt;br&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/huajizuo.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="vue.js" scheme="http://blog.chenwe.top/categories/vue-js/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js平行组件之间通信</title>
    <link href="http://blog.chenwe.top/2017/09/09/Vue.js%E5%B9%B3%E8%A1%8C%E7%BB%84%E4%BB%B6%E4%B9%8B%E9%97%B4%E9%80%9A%E4%BF%A1/"/>
    <id>http://blog.chenwe.top/2017/09/09/Vue.js平行组件之间通信/</id>
    <published>2017-09-09T03:14:03.850Z</published>
    <updated>2017-09-09T03:44:03.427Z</updated>
    
    <content type="html"><![CDATA[<p>在用Vue.js做项目的时候<br>有时候会需要平行组件（非父子组件）之间传递数据的情况</p>
<p>该怎么做呢？<br><img src="http://otj6w86xd.bkt.clouddn.com/bqb-cm.jpg" alt=""></p>
<a id="more"></a>
<h2 id="该怎么办？"><a href="#该怎么办？" class="headerlink" title="该怎么办？"></a>该怎么办？</h2><p>用eventBus来实现</p>
<p>在原来的Vue1.0中组件之间的通信主要通过vm.$dispatch沿着父链向上传播和用vm.$broadcast向下广播来实现。<br>在vue2.0中，已经废除了这种用法。<br>在Vue2.0中可以使用Vuex</p>
<blockquote>
<p>Vuex基于SPA的应用，使用全局state共享数据，达到组件与组件间的通讯。如果你没有开发过大型的单页应用(SPA)就立刻上 Vuex，可能会觉得繁琐然后排斥，这是很正常的 —— 如果是个简单的应用，大多数情况下，不用 Vuex 还好，你要的可能就是个简单的 全局事件总线(global event bus)。不过，如果你构建的是一个中到大型单页应用，当你在考虑如何更好的在 Vue 组件外处理状态时，Vuex 自然就是你的下一步选择。</p>
</blockquote>
<p>如果我们的项目只是一个简单的应用也可以不用Vuex<br>用eventBus来实现</p>
<h2 id="如何实现"><a href="#如何实现" class="headerlink" title="如何实现"></a>如何实现</h2><p>先在common/js下创建一个js文件<br>命名为 bus.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vue();</div></pre></td></tr></table></figure></p>
<p>在要两个兄弟组件中引入bus<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> Bus <span class="keyword">from</span> <span class="string">'./js/bus.js'</span>;</div></pre></td></tr></table></figure></p>
<p>在事件发起组件中<br>我们假设有一个点击事件 <code>showLoginDia</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"el-dropdown-link"</span> @<span class="attr">click</span>=<span class="string">"showLoginDia($event)"</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>我们在showLoginDia中传入一个 event<br>在方法中利用bus来传递数据实现对另一个组件的通信<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Bus.$emit(<span class="string">'login'</span>, event.target);</div></pre></td></tr></table></figure></p>
<p>这样我们点击就通过Bus传递了一个点击事件的event.target名为<code>‘login’</code></p>
<p>然后我们在要接收的组件的 <code>created()</code>中调用bus监听事件<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Bus.$on(<span class="string">'login'</span>, target =&gt; &#123;</div><div class="line">  <span class="keyword">this</span>.$set(<span class="keyword">this</span>.items, <span class="number">2</span>, <span class="keyword">this</span>.bindDormItem);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<ul>
<li>这里我们用$set来更新数组，才能实时更新DOM</li>
</ul>
<p>这样在每次点击的时候，就能通过bus来传递事件到平行组件了</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在用Vue.js做项目的时候&lt;br&gt;有时候会需要平行组件（非父子组件）之间传递数据的情况&lt;/p&gt;
&lt;p&gt;该怎么做呢？&lt;br&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/bqb-cm.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="vue.js" scheme="http://blog.chenwe.top/categories/vue-js/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>使用Xpath来制作python3爬虫</title>
    <link href="http://blog.chenwe.top/2017/09/08/%E4%BD%BF%E7%94%A8Xpath%E6%9D%A5%E5%88%B6%E4%BD%9Cpython3%E7%88%AC%E8%99%AB/"/>
    <id>http://blog.chenwe.top/2017/09/08/使用Xpath来制作python3爬虫/</id>
    <published>2017-09-08T06:52:51.867Z</published>
    <updated>2017-09-08T10:59:59.223Z</updated>
    
    <content type="html"><![CDATA[<p>之前用Python3制作了一个爬虫<br>但是在服务器运行后<br>发现每隔一段时间<br>爬虫就会崩溃</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/wulian.jpg" alt=""></p>
<a id="more"></a>
<h2 id="问题的产生"><a href="#问题的产生" class="headerlink" title="问题的产生"></a>问题的产生</h2><p>发现每隔一段时间<br>爬虫就会崩溃<br>调查日志后发现是爬取的网页的一些样式变了<br>因为我用的是正则表达式来获取数据<br>所以一些样式变了会导致无法正常的获取数据</p>
<p>在知道问题后，我觉定用 Xpath来优化爬虫</p>
<h2 id="什么是Xpath"><a href="#什么是Xpath" class="headerlink" title="什么是Xpath"></a>什么是Xpath</h2><p>以下是Wiki的解释：</p>
<blockquote>
<p>XPath即为XML路径语言（XML Path Language），它是一种用来确定XML文档中某部分位置的语言。 XPath基于XML的树状结构，提供在数据结构树中找寻节点的能力。 起初XPath的提出的初衷是将其作为一个通用的、介于XPointer与XSL间的语法模型。</p>
</blockquote>
<p>如果用Xpath的话<br>就不会出现部分样式更改，而导致爬虫无法正常工作的情况出现了</p>
<h2 id="Xpath库的安装"><a href="#Xpath库的安装" class="headerlink" title="Xpath库的安装"></a>Xpath库的安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install lxml</div></pre></td></tr></table></figure>
<p> 如果是Python3<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install python3-lxml</div></pre></td></tr></table></figure></p>
<h2 id="Xpath的引用"><a href="#Xpath的引用" class="headerlink" title="Xpath的引用"></a>Xpath的引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">from lxml import etree</div></pre></td></tr></table></figure>
<h2 id="Xpath入门"><a href="#Xpath入门" class="headerlink" title="Xpath入门"></a>Xpath入门</h2><p>可以看下w3school里关于<a href="http://www.w3school.com.cn/xpath/index.asp" target="_blank" rel="external">Xpath的教程</a></p>
<h2 id="Xpath获取的小技巧"><a href="#Xpath获取的小技巧" class="headerlink" title="Xpath获取的小技巧"></a>Xpath获取的小技巧</h2><p>用chrome浏览器<br>按f12选中我们要的元素后<br>在HTML中 右键 -&gt; Copy -&gt; Copy Xpath<br>这样我们就复制了一段Xpath</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>我们在获取完HTML后<br>我们可以定义一个函数来格式化数据,返回xml结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">def getxpath(html):</div><div class="line">    return etree.HTML(html)</div></pre></td></tr></table></figure></p>
<p>然后我们调用这个方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">contentTree = getxpath(contentBytes)</div><div class="line">content = contentTree.xpath(&apos;//*[@id=&quot;weisite&quot;]/div[1]/div/section/table/tbody/tr/td/text()&apos;)</div></pre></td></tr></table></figure></p>
<p>这里的content是一个数组<br>表<code>tr</code>下的所有td元素里的text值</p>
<p>这样我们就用Xpath完成了一个简单的爬虫</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前用Python3制作了一个爬虫&lt;br&gt;但是在服务器运行后&lt;br&gt;发现每隔一段时间&lt;br&gt;爬虫就会崩溃&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/wulian.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMVC" scheme="http://blog.chenwe.top/categories/SpringMVC/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js中修改router-link的样式</title>
    <link href="http://blog.chenwe.top/2017/08/29/Vue.js%E4%B8%AD%E4%BF%AE%E6%94%B9router-link%E7%9A%84%E6%A0%B7%E5%BC%8F/"/>
    <id>http://blog.chenwe.top/2017/08/29/Vue.js中修改router-link的样式/</id>
    <published>2017-08-29T11:20:34.758Z</published>
    <updated>2017-08-30T14:51:26.729Z</updated>
    
    <content type="html"><![CDATA[<p>在用vue.js 的时候<br>有个地方用到了router-link<br>并且要修改router-link的样式</p>
<p>但是我发现直接修改router-link是不行的</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/wulian.jpg" alt=""></p>
<a id="more"></a>
<h2 id="该怎么办？"><a href="#该怎么办？" class="headerlink" title="该怎么办？"></a>该怎么办？</h2><p>其实router-link标签和a 标签是一样的<br>我们可以通过对a标签修改<br>达到修改router-link的目的</p>
<p>例如想实现类似手机APP顶部的tab标签<br>可以这样(styl语法)</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">&lt;template&gt;</div><div class="line">  &lt;div id="app"&gt;</div><div class="line">    &lt;div class="tab border-1px"&gt;</div><div class="line">      &lt;div class="tab-item"&gt;</div><div class="line">        &lt;router-link to="/goods"&gt;商品&lt;/router-link&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">      &lt;div class="tab-item"&gt;</div><div class="line">        &lt;router-link to="/ratings"&gt;评论&lt;/router-link&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">      &lt;div class="tab-item"&gt;</div><div class="line">        &lt;router-link to="/seller"&gt;商家&lt;/router-link&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">  &lt;/div&gt;</div><div class="line">&lt;/template&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">export default &#123;</div><div class="line">  name: 'app'</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line"></div><div class="line">&lt;style lang="stylus" rel="stylesheet/stylus"&gt;</div><div class="line">    .tab</div><div class="line">      display:flex</div><div class="line">      width: 100%</div><div class="line">      height: 40px</div><div class="line">      line-height: 40px</div><div class="line">      border-1px(rgba(7, 17, 27, 0.1))</div><div class="line">      .tab-item</div><div class="line">        flex: 1</div><div class="line">        text-align: center</div><div class="line">        &amp; &gt; a</div><div class="line">          display: block</div><div class="line">          font-size: 14px</div><div class="line">          color: rgb(77, 85, 93)</div><div class="line">          &amp;.active</div><div class="line">            color: rgb(240, 20, 20)</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure>
<p>效果图：</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/ele-tab.png" alt=""></p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/bqb-bcm.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在用vue.js 的时候&lt;br&gt;有个地方用到了router-link&lt;br&gt;并且要修改router-link的样式&lt;/p&gt;
&lt;p&gt;但是我发现直接修改router-link是不行的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/wulian.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="vue.js" scheme="http://blog.chenwe.top/categories/vue-js/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js中使用axios数据赋值报错</title>
    <link href="http://blog.chenwe.top/2017/08/28/Vue.js%E4%B8%AD%E4%BD%BF%E7%94%A8axios%E6%95%B0%E6%8D%AE%E8%B5%8B%E5%80%BC%E6%8A%A5%E9%94%99/"/>
    <id>http://blog.chenwe.top/2017/08/28/Vue.js中使用axios数据赋值报错/</id>
    <published>2017-08-28T09:04:57.623Z</published>
    <updated>2017-08-28T09:14:28.061Z</updated>
    
    <content type="html"><![CDATA[<p>在用vue.js的axios插件来获取数据的时候<br>踩了一个坑</p>
<p>获取到的数据对象不能赋值给变量</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/bqb-cm.jpg" alt=""></p>
<a id="more"></a>
<h2 id="问题的代码"><a href="#问题的代码" class="headerlink" title="问题的代码"></a>问题的代码</h2><p>问题代码<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">data() &#123;</div><div class="line">  <span class="keyword">return</span> &#123;</div><div class="line">    <span class="attr">seller</span>: &#123;&#125;,</div><div class="line">  &#125;</div><div class="line">&#125;,</div><div class="line"><span class="attr">methods</span>: &#123;</div><div class="line">  getData() &#123;</div><div class="line">    axios.get(<span class="string">'./static/data.json'</span>)</div><div class="line">    .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</div><div class="line">      <span class="keyword">this</span>.seller = response.data.seller;</div><div class="line">    &#125;)</div><div class="line">    .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(error);</div><div class="line">    &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>我想通过axios来获取data.json里面的seller对象<br>然后赋值给我们的seller<br>但是会报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">TypeError: Cannot set property &apos;seller&apos; of undefined</div><div class="line">    at eval (App.vue?87b3:54)</div><div class="line">    at &lt;anonymous&gt;</div></pre></td></tr></table></figure></p>
<p>它说我们不能赋值给seller</p>
<p>一开始我怀疑是不是数据没拿到<br>于是打印数据<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(response.data.seller);</div></pre></td></tr></table></figure></p>
<p>发现是可以的<br>也就是说是赋值的时候出现了问题</p>
<h2 id="问题的原因"><a href="#问题的原因" class="headerlink" title="问题的原因"></a>问题的原因</h2><p>经过自己的网上资料查找<br>找到了问题的原因</p>
<p>因为 this 指向更改了<br>所以 this.seller 是拿不到对象的<br>（上面的代码可是官方推荐的代码。。居然容易踩坑）</p>
<h2 id="问题的解决"><a href="#问题的解决" class="headerlink" title="问题的解决"></a>问题的解决</h2><p>使用箭头函数来获取数据</p>
<p>示例代码:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">axios.get(<span class="string">'./static/data.json'</span>).then(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">this</span>.seller = response.data.seller;</div><div class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.seller);</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>用箭头函数来实现后<br>就不会报错了<br>问题也解决了</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/bqb-bcm.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在用vue.js的axios插件来获取数据的时候&lt;br&gt;踩了一个坑&lt;/p&gt;
&lt;p&gt;获取到的数据对象不能赋值给变量&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/bqb-cm.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="vue.js" scheme="http://blog.chenwe.top/categories/vue-js/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>手机连接本地服务器调试</title>
    <link href="http://blog.chenwe.top/2017/08/27/%E6%89%8B%E6%9C%BA%E8%BF%9E%E6%8E%A5%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B0%83%E8%AF%95/"/>
    <id>http://blog.chenwe.top/2017/08/27/手机连接本地服务器调试/</id>
    <published>2017-08-27T08:49:21.822Z</published>
    <updated>2017-08-27T08:58:59.219Z</updated>
    
    <content type="html"><![CDATA[<p>有时候我们要做一个面向手机端的项目<br>比如一个面向手机端的网页<br>我们在预览的时候，虽然可以用chrome浏览器的手机模式来预览<br>但是因为像素的关系<br>所以和实际手机端的表现还是有些差异的<br>最好的办法就是在手机端直接预览</p>
<p>那么该怎么办呢</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
<a id="more"></a>
<h2 id="找到本机的ip地址"><a href="#找到本机的ip地址" class="headerlink" title="找到本机的ip地址"></a>找到本机的ip地址</h2><p>打开cmd(或者cmder)<br>输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ipconfig</div></pre></td></tr></table></figure></p>
<p>然后就会获取到本机的ip信息<br>我们要的是这里<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">无线局域网适配器 WLAN:</div><div class="line"></div><div class="line">   连接特定的 DNS 后缀 . . . . . . . :</div><div class="line">   本地链接 IPv6 地址. . . . . . . . : fe80::30cd:b5f:ec67:3054%16</div><div class="line">   IPv4 地址 . . . . . . . . . . . . : 192.168.1.105</div><div class="line">   子网掩码  . . . . . . . . . . . . : 255.255.255.0</div><div class="line">   默认网关. . . . . . . . . . . . . : 192.168.1.1</div></pre></td></tr></table></figure></p>
<p>里面的 IPv4 地址<br>也就是<code>192.168.1.105</code></p>
<p>如果我们要访问本机的<br><a href="http://localhost:8080/goods" target="_blank" rel="external">http://localhost:8080/goods</a><br>地址<br>我们在手机上打开是没用的，因为localhost 只是本机的地址</p>
<p>所以我们要把localhost 替换为 刚刚得到的ip地址<br>最终网址成了 <a href="http://192.168.1.105:8080/goods" target="_blank" rel="external">http://192.168.1.105:8080/goods</a></p>
<p>为了方便使用<br>我们可以去 <a href="https://cli.im" target="_blank" rel="external">草料</a>把我们的连接生成一个二维码<br>然后用手机来扫一扫就可以访问了（要确保手机和电脑处在同一局域网中）</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有时候我们要做一个面向手机端的项目&lt;br&gt;比如一个面向手机端的网页&lt;br&gt;我们在预览的时候，虽然可以用chrome浏览器的手机模式来预览&lt;br&gt;但是因为像素的关系&lt;br&gt;所以和实际手机端的表现还是有些差异的&lt;br&gt;最好的办法就是在手机端直接预览&lt;/p&gt;
&lt;p&gt;那么该怎么办呢&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/lianhong.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="测试" scheme="http://blog.chenwe.top/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Mysql登录&#39;Access denied for user &#39;root&#39;@&#39;localhost&#39;的问题</title>
    <link href="http://blog.chenwe.top/2017/08/18/Mysql%E7%99%BB%E5%BD%95&#39;Access%20denied%20for%20user%20&#39;root&#39;@&#39;localhost&#39;%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://blog.chenwe.top/2017/08/18/Mysql登录&#39;Access denied for user &#39;root&#39;@&#39;localhost&#39;的问题/</id>
    <published>2017-08-18T14:09:27.908Z</published>
    <updated>2017-08-18T14:24:50.888Z</updated>
    
    <content type="html"><![CDATA[<p>之前有一天我服务器里的mysql突然远程连接不上了<br>MySQL WorkBench 连上显示无法读取数据，丢失部分文件<br><img src="http://otj6w86xd.bkt.clouddn.com/wenhao.jpg" alt=""><br><a id="more"></a><br>我用ssh登录出现以下报错</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&apos;Access denied for user &apos;root&apos;@&apos;localhost&apos; (using password: YES)&apos;</div></pre></td></tr></table></figure>
<p>经过资料查找<br>找到了解决方法</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>输入以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"># /etc/init.d/mysql stop</div><div class="line"></div><div class="line"># mysqld_safe --user=mysql --skip-grant-tables --skip-networking &amp;</div><div class="line"></div><div class="line"># mysql -u root mysql</div><div class="line"></div><div class="line">mysql&gt; UPDATE user SET Password=PASSWORD(&apos;新密码&apos;) where USER=&apos;root&apos;;</div><div class="line"></div><div class="line">mysql&gt; FLUSH PRIVILEGES;</div><div class="line"></div><div class="line">mysql&gt; quit</div><div class="line"></div><div class="line"># /etc/init.d/mysql restart</div><div class="line"></div><div class="line"># mysql -uroot -p</div><div class="line"></div><div class="line">Enter password: &lt;新密码&gt;</div><div class="line"></div><div class="line">mysql&gt;</div></pre></td></tr></table></figure></p>
<p>这样我就解决了不能登录的问题</p>
<p>下面我们来配置下远程 MySQL WorkBench连接的配置吧</p>
<h2 id="MySQL-WorkBench远程连接"><a href="#MySQL-WorkBench远程连接" class="headerlink" title="MySQL WorkBench远程连接"></a>MySQL WorkBench远程连接</h2><ul>
<li><p>开放mysql<br>mysql的配置文件在/etc/mysql/my.cnf文件内，里面有一行bind-address = 127.0.0.1表示只允许本地访问，将这行注释即可</p>
</li>
<li><p>创建新的mysql用户<br>在登录mysql后<br>输入以下命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GRANT ALL ON *.* to user@&apos;IP&apos; IDENTIFIED BY &apos;password&apos;;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>其中user表示需要创建用户的名字；IP表示哪台客户端想要访问mysql数据库<br>password表示密码 并赋予所有的权限。<br>如果想要所有IP都能登录<br>那么 将 <code>IP</code> 改成 <code>%</code> 即可</p>
<ul>
<li><p>刷新权限表</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLUSH PRIVILEGES;</div></pre></td></tr></table></figure>
</li>
<li><p>重启数据库</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service mysql restart</div></pre></td></tr></table></figure>
<ul>
<li>用MySQL WorkBench连接<br>新建一个连接<br>输入ip地址 和 用户名<br>就可以测试连接了<br>连接的方法是 TCP/IP</li>
</ul>
<p>这样，我们就做好了mysql的远程连接</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
<p>本篇部分内容参考自<br>简书 的<a href="http://www.jianshu.com/p/ae78ce8d8e14" target="_blank" rel="external">这个</a>解决方案<br>CSDN 的<a href="http://blog.csdn.net/gent__chen/article/details/51065723" target="_blank" rel="external">这个</a>解决方案</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前有一天我服务器里的mysql突然远程连接不上了&lt;br&gt;MySQL WorkBench 连上显示无法读取数据，丢失部分文件&lt;br&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/wenhao.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="MySql" scheme="http://blog.chenwe.top/categories/MySql/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>git detached HEAD状态的解决方法</title>
    <link href="http://blog.chenwe.top/2017/08/12/git%20detached%20HEAD%E7%8A%B6%E6%80%81%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.chenwe.top/2017/08/12/git detached HEAD状态的解决方法/</id>
    <published>2017-08-12T15:17:02.886Z</published>
    <updated>2017-08-12T15:24:01.536Z</updated>
    
    <content type="html"><![CDATA[<p>在用IDEA的时候<br>一不小心就进入detached HEAD状态了<br><img src="http://otj6w86xd.bkt.clouddn.com/bqb-cm.jpg" alt=""><br><a id="more"></a></p>
<h2 id="如何解决"><a href="#如何解决" class="headerlink" title="如何解决"></a>如何解决</h2><p>首先<br>把最新写好的代码保存下<br>commit上去</p>
<p>然后<br>切换到你最后一次正确的指针代码那里（这里以master为例）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout master</div></pre></td></tr></table></figure></p>
<p>创建一条新的分支来保存代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch tempp aa63314</div></pre></td></tr></table></figure></p>
<p>这里的aa63314是我最后一次commit的</p>
<p>然后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git merge tempp</div></pre></td></tr></table></figure></p>
<p>合并过去<br>这样我们就又恢复正常了<br><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在用IDEA的时候&lt;br&gt;一不小心就进入detached HEAD状态了&lt;br&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/bqb-cm.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="git" scheme="http://blog.chenwe.top/categories/git/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Android BottomNavigationView无法添加依赖</title>
    <link href="http://blog.chenwe.top/2017/08/08/Android%20BottomNavigationView%E6%97%A0%E6%B3%95%E6%B7%BB%E5%8A%A0%E4%BE%9D%E8%B5%96/"/>
    <id>http://blog.chenwe.top/2017/08/08/Android BottomNavigationView无法添加依赖/</id>
    <published>2017-08-08T13:49:31.414Z</published>
    <updated>2017-08-08T14:01:51.999Z</updated>
    
    <content type="html"><![CDATA[<p>今天在Android Studio上创建了一个Bottom Navigation Activity<br>但是创建完成后发现BottomNavigationView无法添加依赖<br><img src="http://otj6w86xd.bkt.clouddn.com/wenhao.jpg" alt=""><br><a id="more"></a></p>
<p>网上查找资料<br>发现他的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">com.android.support:design</div></pre></td></tr></table></figure></p>
<p>要25以上</p>
<p>而我的是24，所以就不能使用了</p>
<p>我们需要在 <code>dependencies</code> 里添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile &apos;com.android.support:design:25.1.0&apos;</div></pre></td></tr></table></figure></p>
<p>clean Project 就可以完成依赖了</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天在Android Studio上创建了一个Bottom Navigation Activity&lt;br&gt;但是创建完成后发现BottomNavigationView无法添加依赖&lt;br&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/wenhao.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://blog.chenwe.top/categories/Android/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>练字记录（一）</title>
    <link href="http://blog.chenwe.top/2017/08/04/%E7%BB%83%E5%AD%97%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://blog.chenwe.top/2017/08/04/练字记录（一）/</id>
    <published>2017-08-04T08:27:24.136Z</published>
    <updated>2017-08-04T08:46:16.704Z</updated>
    
    <content type="html"><![CDATA[<p>练字记录<br>每五天左右发一篇博客来记录<br>目前是楷书<br><img src="http://otj6w86xd.bkt.clouddn.com/huajizuo.jpg" alt=""></p>
<a id="more"></a>
<h2 id="为什么要练字？"><a href="#为什么要练字？" class="headerlink" title="为什么要练字？"></a>为什么要练字？</h2><p>打算把自己极丑的字改善下<br>陶冶情操</p>
<h2 id="之前有练过吗？"><a href="#之前有练过吗？" class="headerlink" title="之前有练过吗？"></a>之前有练过吗？</h2><p>以前练字，都是练得英文字<br>而且有一定效果<br>因为英文练字成效快，收益大<br>好的英文字能在作文中取得一定优势</p>
<h2 id="先从哪里练？"><a href="#先从哪里练？" class="headerlink" title="先从哪里练？"></a>先从哪里练？</h2><p>先练楷书吧<br>目前正在临摹 赵孟頫 的 《道德经》</p>
<h2 id="五天的记录"><a href="#五天的记录" class="headerlink" title="五天的记录"></a>五天的记录</h2><ul>
<li><p>2017年07月31日<br><img src="http://otj6w86xd.bkt.clouddn.com/zi01.jpg" alt=""></p>
</li>
<li><p>2017年08月01日<br><img src="http://otj6w86xd.bkt.clouddn.com/zi02.jpg" alt=""></p>
</li>
<li><p>2017年08月02日<br><img src="http://otj6w86xd.bkt.clouddn.com/zi03.jpg" alt=""></p>
</li>
<li><p>2017年08月03日<br><img src="http://otj6w86xd.bkt.clouddn.com/zi04.jpg" alt=""></p>
</li>
<li><p>2017年08月04日<br><img src="http://otj6w86xd.bkt.clouddn.com/zi05.jpg" alt=""></p>
</li>
</ul>
<p><img src="http://otj6w86xd.bkt.clouddn.com/ha.jpg" alt=""><br><strong>虽然自己的字还是很难看</strong><br><strong>但还是要坚持下去</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;练字记录&lt;br&gt;每五天左右发一篇博客来记录&lt;br&gt;目前是楷书&lt;br&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/huajizuo.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="练字" scheme="http://blog.chenwe.top/categories/%E7%BB%83%E5%AD%97/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="life" scheme="http://blog.chenwe.top/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot远程shell监控和管理</title>
    <link href="http://blog.chenwe.top/2017/08/03/SpringBoot%E8%BF%9C%E7%A8%8Bshell%E7%9B%91%E6%8E%A7%E5%92%8C%E7%AE%A1%E7%90%86/"/>
    <id>http://blog.chenwe.top/2017/08/03/SpringBoot远程shell监控和管理/</id>
    <published>2017-08-03T12:39:38.610Z</published>
    <updated>2017-08-03T12:57:05.140Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Boot支持集成一个称为’CRaSH’的Java shell<br>你可以在CRaSH中使用ssh或telnet命令连接到运行的应用<br><img src="http://otj6w86xd.bkt.clouddn.com/bucunzaide.jpg" alt=""></p>
<a id="more"></a>
<h2 id="首先我们要在SpringBoot里配置pom-xml文件"><a href="#首先我们要在SpringBoot里配置pom-xml文件" class="headerlink" title="首先我们要在SpringBoot里配置pom.xml文件"></a>首先我们要在SpringBoot里配置pom.xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-remote-shell<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="创建一个用户"><a href="#创建一个用户" class="headerlink" title="创建一个用户"></a>创建一个用户</h2><p>这步如果不做的话还是会有一个默认用户的<br>用户名是<code>user</code><br>密码当应用启动时会在控制台里打印出来</p>
<p>如果想自己定义一个用户<br>就在 <code>properties</code>文件里添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">management.shell.auth.simple.user.name=admin</div><div class="line">management.shell.auth.simple.user.password=123456</div></pre></td></tr></table></figure></p>
<p>这样你就生成了一个用户名是 admin<br>密码是 123456的用户了</p>
<h2 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h2><p>通过ssh 来登录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -p 2000 admin@localhost</div></pre></td></tr></table></figure>
<p>默认端口是 2000</p>
<p>连接成功后 通过help 来查看命名</p>
<p>至此，我们成功链接上了远程的SpringBoot项目<br><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spring Boot支持集成一个称为’CRaSH’的Java shell&lt;br&gt;你可以在CRaSH中使用ssh或telnet命令连接到运行的应用&lt;br&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/bucunzaide.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://blog.chenwe.top/categories/SpringBoot/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>IDEA Maven项目依赖失效</title>
    <link href="http://blog.chenwe.top/2017/08/02/IDEA%20Maven%E9%A1%B9%E7%9B%AE%E4%BE%9D%E8%B5%96%E5%A4%B1%E6%95%88/"/>
    <id>http://blog.chenwe.top/2017/08/02/IDEA Maven项目依赖失效/</id>
    <published>2017-08-02T02:35:45.599Z</published>
    <updated>2017-08-02T03:05:18.097Z</updated>
    
    <content type="html"><![CDATA[<p>最近整理了一下硬盘<br>然后再打开我的SpringBoot项目<br>发现所有的依赖都没了，IDEA提示一片红，像满山的山楂树 红红火火恍恍惚惚</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/xianruchensi.jpg" alt=""></p>
<a id="more"></a>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>我们需要打开我们的pom.xml文件<br>找到这几行代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>关键在 <version>1.5.4.RELEASE</version> 这里</p>
<p>我们可以在IDEA中重新创建一个SpringBoot项目<br>然后查看新项目的 pom文件中的version值，会发现和这个项目不一样<br>我们复制新项目的版本到这个版本中</p>
<p>点击IDEA的import change 重新导入后就可以了</p>
<p>这时我们会发现我们之前的依赖又回来了<br><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近整理了一下硬盘&lt;br&gt;然后再打开我的SpringBoot项目&lt;br&gt;发现所有的依赖都没了，IDEA提示一片红，像满山的山楂树 红红火火恍恍惚惚&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/xianruchensi.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="IDEA" scheme="http://blog.chenwe.top/categories/IDEA/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>关于百度搜索不到Github Pages的解决方法.</title>
    <link href="http://blog.chenwe.top/2017/08/01/%E5%85%B3%E4%BA%8E%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%E4%B8%8D%E5%88%B0Github%20Pages%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.chenwe.top/2017/08/01/关于百度搜索不到Github Pages的解决方法/</id>
    <published>2017-08-01T08:09:24.308Z</published>
    <updated>2017-08-01T09:10:22.909Z</updated>
    
    <content type="html"><![CDATA[<p>我的博客是托管在Github Pages上的<br>我们知道，Github是屏蔽百度的<br>所有我们的博客是不会被百度收录的<br>如果我们想要被百度收录的话该怎么办呢<br><img src="http://otj6w86xd.bkt.clouddn.com/wenhao.jpg" alt=""></p>
<a id="more"></a>
<h2 id="使用coding来一起托管"><a href="#使用coding来一起托管" class="headerlink" title="使用coding来一起托管"></a>使用coding来一起托管</h2><p>Coding也是一个代码托管平台<br>也有Coding Pages的服务<br>而且不会屏蔽百度爬虫<br>我们可以利用Coding Pages 来帮我们完成被百度收录的工作</p>
<h2 id="讲代码迁移到coding上"><a href="#讲代码迁移到coding上" class="headerlink" title="讲代码迁移到coding上"></a>讲代码迁移到coding上</h2><p>我们首先要注册一个coding的账号<br>个人设置中配置好ssh公钥</p>
<p>然后我们新建一个项目<br><img src="http://otj6w86xd.bkt.clouddn.com/2017080101.png" alt=""><br>将项目的名字命名为自己的 名字.coding.me</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/2017080102.png" alt=""><br>复制我们的项目连接</p>
<p>打开我们的博客<br>找到 _config 文件</p>
<p>在 depoly里添加coding的仓库地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">- type: git</div><div class="line">  repository:</div><div class="line">    github: https://github.com/yourname/yourname.github.io,master</div><div class="line">    coding: git@git.coding.net:yourname/yourname.coding.me.git,master</div></pre></td></tr></table></figure></p>
<p>我们打开命令行工具<br>执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo g</div><div class="line">hexo d</div></pre></td></tr></table></figure></p>
<p>如果配置没问题的话，你的项目应该已经出现在coding的仓库里了</p>
<h2 id="开启coding-pages服务"><a href="#开启coding-pages服务" class="headerlink" title="开启coding pages服务"></a>开启coding pages服务</h2><p>完善自己coding的个人信息<br>达到银牌才能开启pages服务</p>
<p><img src="http://otj6w86xd.bkt.clouddn.com/2017080103.png" alt=""><br>在这里设置pages服务</p>
<p>如果没有域名的话，看到这里就可以了</p>
<p>有自己的域名的话接着往下看</p>
<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>我买的域名是阿里云的万网<br>支持智能路由<br><img src="http://otj6w86xd.bkt.clouddn.com/2017080104.png" alt=""><br>我们设置默认访问coding pages，海外访问github pages<br>这样我们域名就绑定好了</p>
<p>但是因为coding pages 是有限制的，如果银牌会员绑定域名<br>每天第一次访问时会跳出一个5秒掉的引导页<br>这个会让搜索引擎的爬虫无法爬取数据</p>
<h2 id="收录网站"><a href="#收录网站" class="headerlink" title="收录网站"></a>收录网站</h2><p>所以我们需要关掉这个引导页<br>官方的要求是在页面里加入 Host by coding pages<br><img src="http://otj6w86xd.bkt.clouddn.com/2017080105.png" alt=""></p>
<p>毕竟用了人家的服务<br>还是要支持一下的嘛，不能总是想着占便宜，不付出</p>
<p>加完Host by Coding Pages并通过审核后<br>我们的内容就可以被百度和Google爬虫爬取了</p>
<p>测试是否能被百度收录<br>可以用百度的<a href="http://zhanzhang.baidu.com/" target="_blank" rel="external">站长工具</a><br>来测试<br>在网页抓取 -&gt; 抓取诊断里<br><img src="http://otj6w86xd.bkt.clouddn.com/2017080106.png" alt=""><br>测试能否被抓取<br>当然，要他们收录你的网站，你还要通过他的验证，这里就不赘述了</p>
<p>Google收录的方法也是类似的，但是收录的速度比百度快很多，这里也不做赘述</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我的博客是托管在Github Pages上的&lt;br&gt;我们知道，Github是屏蔽百度的&lt;br&gt;所有我们的博客是不会被百度收录的&lt;br&gt;如果我们想要被百度收录的话该怎么办呢&lt;br&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/wenhao.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Github Pages" scheme="http://blog.chenwe.top/categories/Github-Pages/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js实现按钮点击出现倒计时</title>
    <link href="http://blog.chenwe.top/2017/07/31/Vue.js%E5%AE%9E%E7%8E%B0%E6%8C%89%E9%92%AE%E7%82%B9%E5%87%BB%E5%87%BA%E7%8E%B0%E5%80%92%E8%AE%A1%E6%97%B6/"/>
    <id>http://blog.chenwe.top/2017/07/31/Vue.js实现按钮点击出现倒计时/</id>
    <published>2017-07-31T12:09:02.116Z</published>
    <updated>2017-07-31T12:34:05.983Z</updated>
    
    <content type="html"><![CDATA[<p>有时候我们会遇到这种需求<br>比如我们在向客户发送一个验证码的时候<br>为了防止资源被浪费，所以要让客户每隔60秒才能再发送下一次验证码</p>
<p>那么如何实现这个功能呢</p>
<a id="more"></a>
<h2 id="需要用到的东西"><a href="#需要用到的东西" class="headerlink" title="需要用到的东西"></a>需要用到的东西</h2><p>这里我用Vue.js的脚手架工具和Element UI 构建了一个简单的按钮示例<br><img src="http://otj6w86xd.bkt.clouddn.com/2017073101.png" alt=""></p>
<p>我们点击右侧的获取验证码就能够出发按钮的事件<br>同时按钮开始变成不可点击<br>并显示倒计时</p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>首先看下我们按钮和表单的实现<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"验 证 码"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"form.code"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">slot</span>=<span class="string">"append"</span> <span class="attr">icon</span>=<span class="string">"message"</span> <span class="attr">:loading</span>=<span class="string">"sendLoad"</span> <span class="attr">placeholder</span>=<span class="string">"请输入验证码"</span></span></div><div class="line">              @<span class="attr">click</span>=<span class="string">"sendMail()"</span>&gt;&#123;&#123;text&#125;&#125;<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>我们将按钮的文本定义为 text，通过sendMail() 方法来执行相关操作<br>我们定一个了一个sendLoad 作为加载的开关</p>
<p>在 methods里，我是这样实现的<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">sendMail() &#123;</div><div class="line">  <span class="keyword">this</span>.sendLoad = <span class="literal">true</span>;</div><div class="line">  <span class="keyword">this</span>.time = <span class="number">60</span>;</div><div class="line">  <span class="keyword">this</span>.timer();</div><div class="line">&#125;,</div><div class="line">timer () &#123;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.time &gt; <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">this</span>.time--;</div><div class="line">        setTimeout(<span class="keyword">this</span>.timer, <span class="number">1000</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>紧接着，我在computed里来实现倒计时<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">text: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.time == <span class="number">0</span>) &#123;</div><div class="line">      <span class="keyword">this</span>.sendLoad = <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.time &gt; <span class="number">0</span> ? <span class="keyword">this</span>.time + <span class="string">'s 后重新获取'</span> : <span class="string">'获取验证码'</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>我们来看下<br>点击按钮时，设置按钮为加载的不可点击状态<br>我们初始化time为60<br>然后执行timer()方法<br>里面有一个setTimeout方法<br>setTimeout() 方法用于在指定的毫秒数后调用函数或计算表达式。</p>
<p>所以我们每个一秒就会减少一次数值<br>在computed里，我们设置当time的值等于0时，重置按钮状态<br>如果不等于0，我们显示按钮上的text为 剩余时间 + s 后重新获取</p>
<p>因此，我们可以得到如下的功能</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>点击前<br><img src="http://otj6w86xd.bkt.clouddn.com/2017073101.png" alt=""></p>
<p>点击后<br><img src="http://otj6w86xd.bkt.clouddn.com/2017073102.png" alt=""></p>
<p>我们的按钮开始转动且不可点击，当倒计时结束，又变成原来的样子<br><img src="http://otj6w86xd.bkt.clouddn.com/lianhong.jpg" alt=""><br>这样，我们就实现了一个简单的按钮倒计时控件</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有时候我们会遇到这种需求&lt;br&gt;比如我们在向客户发送一个验证码的时候&lt;br&gt;为了防止资源被浪费，所以要让客户每隔60秒才能再发送下一次验证码&lt;/p&gt;
&lt;p&gt;那么如何实现这个功能呢&lt;/p&gt;
    
    </summary>
    
      <category term="vue.js" scheme="http://blog.chenwe.top/categories/vue-js/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>在Nginx上部署Vue.js项目</title>
    <link href="http://blog.chenwe.top/2017/07/30/%E5%9C%A8Nginx%E4%B8%8A%E9%83%A8%E7%BD%B2Vue.js%E9%A1%B9%E7%9B%AE/"/>
    <id>http://blog.chenwe.top/2017/07/30/在Nginx上部署Vue.js项目/</id>
    <published>2017-07-30T11:26:28.043Z</published>
    <updated>2017-07-30T11:46:14.639Z</updated>
    
    <content type="html"><![CDATA[<p>上次写过一篇在Tomcat上部署Vue.js项目的博客</p>
<p>这次我们试着在Nginx上部署一下Vue.js项目</p>
<a id="more"></a>
<h3 id="Nginx-的安装"><a href="#Nginx-的安装" class="headerlink" title="Nginx 的安装"></a>Nginx 的安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install nginx</div></pre></td></tr></table></figure>
<h3 id="确定Nginx配置文件的位置"><a href="#确定Nginx配置文件的位置" class="headerlink" title="确定Nginx配置文件的位置"></a>确定Nginx配置文件的位置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx -t</div></pre></td></tr></table></figure>
<p>当你执行 nginx -t 得时候，nginx会去测试你的配置文件得语法<br>并告诉你配置文件是否写得正确，同时也告诉了你配置文件得路径</p>
<p>例如在我的服务器上是在：/etc/nginx/nginx.conf</p>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>执行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/nginx/nginx.conf</div></pre></td></tr></table></figure></p>
<p>选择编辑选项</p>
<p>在里面的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">http &#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>中添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">        listen 80;               # 监听本机所有 ip 上的 80 端口</div><div class="line">        server_name _;           # 域名：www.example.com 这里 &quot;_&quot; 代表获取匹配所有</div><div class="line">        root /home/filename/;    # 站点根目录</div><div class="line"></div><div class="line">        location / &#123;             # 可有多个 location 用于配置路由地址</div><div class="line">            try_files index.html =404;</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>站点根目录就是存放你静态网页的位置</p>
<h3 id="打包Vue-js项目"><a href="#打包Vue-js项目" class="headerlink" title="打包Vue.js项目"></a>打包Vue.js项目</h3><p>我们在本地运行命令来打包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run bulid</div></pre></td></tr></table></figure></p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>将打包后生成的dist文件夹中文件复制到我们刚刚的站点根目录里</p>
<h3 id="Nginx-启动运行"><a href="#Nginx-启动运行" class="headerlink" title="Nginx 启动运行"></a>Nginx 启动运行</h3><p>有两种方法</p>
<ol>
<li><p>通过reload来重新加载配置文件，切换平滑</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nginx -s reload</div></pre></td></tr></table></figure>
</li>
<li><p>重启服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service nginx restart</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><img src="http://otj6w86xd.bkt.clouddn.com/bqb-bcm.jpg" alt=""><br>下面我们访问server_name里配置的域名就好了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上次写过一篇在Tomcat上部署Vue.js项目的博客&lt;/p&gt;
&lt;p&gt;这次我们试着在Nginx上部署一下Vue.js项目&lt;/p&gt;
    
    </summary>
    
      <category term="vue.js" scheme="http://blog.chenwe.top/categories/vue-js/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>关于博客的部分优化</title>
    <link href="http://blog.chenwe.top/2017/07/28/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%83%A8%E5%88%86%E4%BC%98%E5%8C%96/"/>
    <id>http://blog.chenwe.top/2017/07/28/关于博客的部分优化/</id>
    <published>2017-07-28T07:01:55.035Z</published>
    <updated>2017-07-28T08:24:27.966Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加网页icon"><a href="#添加网页icon" class="headerlink" title="添加网页icon"></a>添加网页icon</h2><p>我目前用的是<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">yilia</a>主题<br>他默认没有网页的icon<br>需要我们手动添加</p>
<a id="more"></a>
<p>在themes－&gt;yilia&gt;layout－&gt; partial 文件夹里面<br>打开head.ejs文件</p>
<p>将<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;link href=&quot;&lt;%- config.root %&gt;favicon.png&quot; rel=&quot;icon&quot;&gt;</div></pre></td></tr></table></figure></p>
<p>修改成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;link href=&quot;&lt;%- config.root %&gt;img/photo.ico&quot; rel=&quot;icon&quot; type=&quot;image/x-ico&quot;&gt;</div></pre></td></tr></table></figure></p>
<p>其中img/photo.ico 是我存放图片的目录和文件</p>
<p>然后我们<br>hexo g<br>hexo s<br>我们就能在本地预览到结果了</p>
<h2 id="添加评论模块"><a href="#添加评论模块" class="headerlink" title="添加评论模块"></a>添加评论模块</h2><p>想要添加一个评论模块<br>可以用一些厂商提供的插件来实现</p>
<h3 id="评论插件的选择"><a href="#评论插件的选择" class="headerlink" title="评论插件的选择"></a>评论插件的选择</h3><ul>
<li><p>多说<br><img src="http://otj6w86xd.bkt.clouddn.com/bucunzaide.jpg" alt=""><br>已经停止支持了，在停止支持之前，是一个很好的评论插件</p>
</li>
<li><p>网易云跟帖<br><img src="http://otj6w86xd.bkt.clouddn.com/wenhao.jpg" alt=""><br>去官网看了下，2017年8月1日也要停止支持了..</p>
</li>
<li><p>畅言<br><img src="http://otj6w86xd.bkt.clouddn.com/jiade.jpg" alt=""><br>需要域名备案。我的博客目前做不到。</p>
</li>
<li><p>Disqus<br><img src="http://otj6w86xd.bkt.clouddn.com/bqb-cm.jpg" alt=""><br>需要跨过长城..</p>
</li>
<li><p>来必力<br>最终选择了<a href="https://livere.com/" target="_blank" rel="external">来必力</a><br><img src="http://otj6w86xd.bkt.clouddn.com/bqb-bcm.jpg" alt=""><br>虽然是韩国的产品，但是要做拿来主义嘛</p>
</li>
</ul>
<h2 id="来必力-评论模块的使用"><a href="#来必力-评论模块的使用" class="headerlink" title="来必力 评论模块的使用"></a>来必力 评论模块的使用</h2><p>先去官网注册一个账号<a href="https://livere.com/" target="_blank" rel="external">来必力</a><br>申请一个key<br>在themes\ yilia\ _ partial \ post 目录下<br>新建一个livere.ejs文件<br>把安装代码复制进去<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 来必力City版安装代码 --&gt;</div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"lv-container"</span> <span class="attr">data-id</span>=<span class="string">"city"</span> <span class="attr">data-uid</span>=<span class="string">"你的uid"</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line">   (<span class="function"><span class="keyword">function</span>(<span class="params">d, s</span>) </span>&#123;</div><div class="line">       <span class="keyword">var</span> j, e = d.getElementsByTagName(s)[<span class="number">0</span>];</div><div class="line">       <span class="keyword">if</span> (<span class="keyword">typeof</span> LivereTower === <span class="string">'function'</span>) &#123; <span class="keyword">return</span>; &#125;</div><div class="line">       j = d.createElement(s);</div><div class="line">       j.src = <span class="string">'https://cdn-city.livere.com/js/embed.dist.js'</span>;</div><div class="line">       j.async = <span class="literal">true</span>;</div><div class="line">       e.parentNode.insertBefore(j, e);</div><div class="line">   &#125;)(<span class="built_in">document</span>, <span class="string">'script'</span>);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span>为正常使用来必力评论功能请激活JavaScript<span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">&lt;!-- City版安装代码已完成 --&gt;</div></pre></td></tr></table></figure></p>
<p>记得填上自己的uid</p>
<p>在layout_partial\ article.ejs中<br>&lt;% if (!index &amp;&amp; post.comments){ %&gt;下面添加如下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;% if (theme.livere)&#123; %&gt;</div><div class="line">&lt;%- partial(&apos;post/livere&apos;, &#123;</div><div class="line">    key: post.slug,</div><div class="line">    title: post.title,</div><div class="line">    url: config.url+url_for(post.path)</div><div class="line">  &#125;) %&gt;</div><div class="line">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure></p>
<p>最后，我们在_config.xml 文件里添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">livere: true</div></pre></td></tr></table></figure></p>
<p>这样我们就完成了来必力评论模块的添加了</p>
<h2 id="关于博客的图片"><a href="#关于博客的图片" class="headerlink" title="关于博客的图片"></a>关于博客的图片</h2><p>一开始我选择把博客的图片放到github上<br>但是因为github对于项目的空间大小是有限制的<br>所以最终肯定会不够的<br>于是我选择了 <a href="https://www.qiniu.com" target="_blank" rel="external">七牛云</a>作为图床<br>上传图片-复制外链-搞定</p>
<ul>
<li>注<br>本篇博客部分内容参考<a href="http://www.zhoujy.me/2017/07/16/livere/#添加livere插件" target="_blank" rel="external">Zhou</a>的这篇博客</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;添加网页icon&quot;&gt;&lt;a href=&quot;#添加网页icon&quot; class=&quot;headerlink&quot; title=&quot;添加网页icon&quot;&gt;&lt;/a&gt;添加网页icon&lt;/h2&gt;&lt;p&gt;我目前用的是&lt;a href=&quot;https://github.com/litten/hexo-theme-yilia&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;yilia&lt;/a&gt;主题&lt;br&gt;他默认没有网页的icon&lt;br&gt;需要我们手动添加&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://blog.chenwe.top/categories/hexo/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="life" scheme="http://blog.chenwe.top/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>关于API传递参数的一些小问题</title>
    <link href="http://blog.chenwe.top/2017/07/27/%E5%85%B3%E4%BA%8EAPI%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
    <id>http://blog.chenwe.top/2017/07/27/关于API传递参数的一些小问题/</id>
    <published>2017-07-27T10:24:52.472Z</published>
    <updated>2017-07-28T06:42:56.464Z</updated>
    
    <content type="html"><![CDATA[<p>有些API接口要求传回参数</p>
<p>有时候我们会在链接里直接带上参数<br>在后台用@PathVariable来获取参数<br>但是有些数据是不能直接放入链接里的</p>
<a id="more"></a>
<h2 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@GetMapping</span>(<span class="string">"/forget_password/email=&#123;email&#125;"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">forgetPassword</span><span class="params">(@PathVariable(<span class="string">"email"</span>)</span> String email)</span></div></pre></td></tr></table></figure>
<p>这个是我们常用的方法，通过@PathVariable获取email的信息<br><strong>但是</strong><br>这个是有问题的<br>因为email是带有.com的<br>所以如果123456@mail.com 放入链接会变成 /forget_password/email=123456@mail.com<br>那么系统就会把 .com不当成邮箱的部分而舍去<br>后台用@PathVariable方法只会获取到123456@mail这个值</p>
<p>所以我们这里要用post放到body里传邮箱的值</p>
<p>除此之外，还有一些例如 换行之类的也是不能直接传的，要放到POST的body体里传过来（以前就犯过这个错误。。）</p>
<p><strong>除了这些带有特殊字符的值以外</strong></p>
<p><strong>我们还要注意一些敏感的数据不能直接放到连接里。</strong></p>
<h2 id="顺便一提"><a href="#顺便一提" class="headerlink" title="顺便一提"></a>顺便一提</h2><p>SpringBoot里，获取数据有两种<br>一种是从连接里获取，还有一种是从body里获取</p>
<ul>
<li>连接里获取<br>利用 @PathVariable 注解<br>例如:<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@GetMapping</span>(<span class="string">"/findByDorm/dorm=&#123;dorm&#125;"</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">findByDor</span><span class="params">(@PathVariable(<span class="string">"dorm"</span>)</span> String dorm) </span>&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这样我们就获取了连接的dorm的值了</p>
<ul>
<li>body里取值<br>利用 @RequestParam 注解<br>例如:<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@PostMapping</span>(<span class="string">"/bindingDorm"</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">bindingDorm</span><span class="params">(@RequestParam(<span class="string">"dorm"</span>)</span> String dorm) </span>&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这样我们就获取了连接的dorm的值了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有些API接口要求传回参数&lt;/p&gt;
&lt;p&gt;有时候我们会在链接里直接带上参数&lt;br&gt;在后台用@PathVariable来获取参数&lt;br&gt;但是有些数据是不能直接放入链接里的&lt;/p&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://blog.chenwe.top/categories/SpringBoot/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js中Cookie的操作</title>
    <link href="http://blog.chenwe.top/2017/07/23/Vue.js%E4%B8%ADCookie%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
    <id>http://blog.chenwe.top/2017/07/23/Vue.js中Cookie的操作/</id>
    <published>2017-07-23T06:25:01.399Z</published>
    <updated>2017-07-23T07:02:24.073Z</updated>
    
    <content type="html"><![CDATA[<p>在用vue.js搭建前端的时候<br>做到登录的功能</p>
<p>登录成功后，虽然能在界面上显示用户名<br>但是一刷新就全没了<br><img src="http://otj6w86xd.bkt.clouddn.com/bqb-cm.jpg" alt=""></p>
<a id="more"></a>
<h2 id="该怎么办？"><a href="#该怎么办？" class="headerlink" title="该怎么办？"></a>该怎么办？</h2><p>我的做法是保存到Cookie里</p>
<ul>
<li>那么该怎么保存呢？</li>
</ul>
<p>我们自己来手动保存吧<br>来到main.js文件里<br>把有关Cookie的操作都写好<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//设置cookie</span></div><div class="line">Vue.prototype.setCookie = <span class="function">(<span class="params">c_name, value, expiredays</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">var</span> exdate = <span class="keyword">new</span> <span class="built_in">Date</span>();　　　　</div><div class="line">  exdate.setDate(exdate.getDate() + expiredays);　　　　</div><div class="line">  <span class="built_in">document</span>.cookie = c_name + <span class="string">"="</span> + <span class="built_in">escape</span>(value) + ((expiredays == <span class="literal">null</span>) ? <span class="string">""</span> : <span class="string">";expires="</span> + exdate.toGMTString());</div><div class="line">&#125;</div><div class="line"><span class="comment">//获取cookie、</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">name</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> arr, reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^| )"</span> + name + <span class="string">"=([^;]*)(;|$)"</span>);</div><div class="line">  <span class="keyword">if</span> (arr = <span class="built_in">document</span>.cookie.match(reg))</div><div class="line">    <span class="keyword">return</span> (arr[<span class="number">2</span>]);</div><div class="line">  <span class="keyword">else</span></div><div class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</div><div class="line">&#125;</div><div class="line">Vue.prototype.getCookie = getCookie;</div><div class="line"></div><div class="line"><span class="comment">//删除cookie</span></div><div class="line">Vue.prototype.delCookie =<span class="function">(<span class="params">name</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">var</span> exp = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">    exp.setTime(exp.getTime() - <span class="number">1</span>);</div><div class="line">    <span class="keyword">var</span> cval = getCookie(name);</div><div class="line">    <span class="keyword">if</span> (cval != <span class="literal">null</span>)</div><div class="line">      <span class="built_in">document</span>.cookie = name + <span class="string">"="</span> + cval + <span class="string">";expires="</span> + exp.toGMTString();</div><div class="line">  &#125;</div></pre></td></tr></table></figure></p>
<p>这样我们就有关于Cookie的操作了</p>
<h2 id="该怎么用？"><a href="#该怎么用？" class="headerlink" title="该怎么用？"></a>该怎么用？</h2><p>到我们想要存储Cookie的地方<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> expireDays = <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">15</span>;</div><div class="line"><span class="keyword">this</span>.setCookie(<span class="string">'username'</span>, response.data, expireDays);</div></pre></td></tr></table></figure></p>
<p>用this.xxxCookie调用就好了<br>expireDays是Cookie失效时间</p>
<p>这样，我们就能够完成对于Cookie的操作了<br>在用户刷新时，在created方法里获取Cookie就知道用户有没有登录了<br><img src="http://otj6w86xd.bkt.clouddn.com/bqb-bcm.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在用vue.js搭建前端的时候&lt;br&gt;做到登录的功能&lt;/p&gt;
&lt;p&gt;登录成功后，虽然能在界面上显示用户名&lt;br&gt;但是一刷新就全没了&lt;br&gt;&lt;img src=&quot;http://otj6w86xd.bkt.clouddn.com/bqb-cm.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="vue.js" scheme="http://blog.chenwe.top/categories/vue-js/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot定时任务</title>
    <link href="http://blog.chenwe.top/2017/07/20/SpringBoot%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    <id>http://blog.chenwe.top/2017/07/20/SpringBoot定时任务/</id>
    <published>2017-07-20T10:28:30.770Z</published>
    <updated>2017-07-20T10:44:04.516Z</updated>
    
    <content type="html"><![CDATA[<p>定时任务是一个后台经常要用到的功能</p>
<a id="more"></a>
<h2 id="首先我们要在SpringBoot里配置pom-xml文件"><a href="#首先我们要在SpringBoot里配置pom-xml文件" class="headerlink" title="首先我们要在SpringBoot里配置pom.xml文件"></a>首先我们要在SpringBoot里配置pom.xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<p>只要有starter就好了（spring-boot-starter-xxx也行）</p>
<h2 id="创建一个定时任务"><a href="#创建一个定时任务" class="headerlink" title="创建一个定时任务"></a>创建一个定时任务</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by cw on 2017/7/20.</div><div class="line"> */</div><div class="line"> <span class="meta">@Component</span></div><div class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SchedulerTaskFindAndSend</span> </span>&#123;</div><div class="line">     <span class="keyword">private</span> <span class="keyword">int</span> count=<span class="number">0</span>;</div><div class="line"></div><div class="line">     <span class="meta">@Scheduled</span>(cron=<span class="string">"*/30 * * * * ?"</span>)</div><div class="line">     <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">()</span></span>&#123;</div><div class="line">         System.out.println(<span class="string">"count = "</span>+(count++));</div><div class="line">     &#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>在@SpringBootApplication下添加@EnableScheduling<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">@SpringBootApplication</div><div class="line">@EnableScheduling</div></pre></td></tr></table></figure></p>
<p>启动运行程序<br>控制台会每隔30秒打印出 count = 计数</p>
<h2 id="关于-Scheduled"><a href="#关于-Scheduled" class="headerlink" title="关于@Scheduled"></a>关于@Scheduled</h2><p>除了cron=” “ 这种方式外<br>还有以下几种</p>
<ul>
<li>@Scheduled(fixedRate = 3000) ————————上一次开始执行时间点之后3秒再执行</li>
<li>@Scheduled(fixedDelay = 3000) ————————上一次执行完毕时间点之后3秒再执行</li>
<li>@Scheduled(initialDelay=1000, initialDelay = 3000) ————————第一次延迟1秒后执行，之后按fixedRate的规则每3秒执行一次</li>
</ul>
<p><strong>关于cron表达式</strong><br>可以看下<a href="http://rainbowdesert.iteye.com/blog/2107220" target="_blank" rel="external">这篇博客</a>对于cron表达式讲解比较详细</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;定时任务是一个后台经常要用到的功能&lt;/p&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://blog.chenwe.top/categories/SpringBoot/"/>
    
    
      <category term="study" scheme="http://blog.chenwe.top/tags/study/"/>
    
      <category term="code" scheme="http://blog.chenwe.top/tags/code/"/>
    
  </entry>
  
</feed>
